WEBVTT

1
00:00:01.290 --> 00:00:21.600
Jae Young Lee: Okay so we are discussing chapter 14 today. This is the last chapter, we will discuss from the textbook and then after that I think probably will discuss on the chapter 14. Today is Saturday we will briefly discuss so called the key and n p

2
00:00:25.470 --> 00:00:30.750
Jae Young Lee: The chapter 14 is about graph algorithms. So we begin with

3
00:00:32.070 --> 00:00:37.680
Jae Young Lee: I mean all of this definitions and some basic concepts of crafts.

4
00:00:39.540 --> 00:00:51.930
Jae Young Lee: I think we briefly mentioned definition of a graph, when we were discussing binary tree because tree is a binary tree is a graph graph is a

5
00:00:53.040 --> 00:00:55.200
Jae Young Lee: Set of practices, instead of edges.

6
00:00:56.220 --> 00:01:06.750
Jae Young Lee: So this is a graph. This is also grab it is set of vertices for a PC D. They said all ages all ages.

7
00:01:10.560 --> 00:01:11.520
Jae Young Lee: Sometimes

8
00:01:12.570 --> 00:01:34.290
Jae Young Lee: We label, he will give a name to an edge and then we can use that name to denote a niche, but usually we use it is notation. So this isn't it connecting a note you with note. So for your positive energy, we can write this just a copy

9
00:01:36.990 --> 00:01:49.230
Jae Young Lee: And then, and he can be directed or undertaken in this graph. As you can see, all edges not directions, but in this graph each

10
00:01:50.280 --> 00:01:54.270
Jae Young Lee: Direction. So this is an underrated graph. This is a tricky.

11
00:01:59.790 --> 00:02:02.700
Jae Young Lee: To technologists adjacent an instance

12
00:02:06.210 --> 00:02:14.880
Jae Young Lee: Which isn't is between two nodes. So to New York and Memphis do which is to ensure that poster and dollars which is

13
00:02:15.900 --> 00:02:20.190
Jae Young Lee: To those Jason's if they are connected by an

14
00:02:21.660 --> 00:02:35.670
Jae Young Lee: Eastern is a relationship between an edge, na, na so we say this, he is instance to New York or this node anxieties. He is instance to disperse the system.

15
00:02:37.860 --> 00:02:49.800
Jae Young Lee: In a certain graph and he is associated with a certain information. So in general, it could be any information, but in the simplest case, it is just a number, usually a real number.

16
00:02:51.090 --> 00:02:51.870
Jae Young Lee: Four, which I'll put

17
00:02:54.570 --> 00:03:00.720
Jae Young Lee: All the ages here have these numbers, but actually you saw this way to grab

18
00:03:01.770 --> 00:03:05.370
Jae Young Lee: That is great if you are using for your class project.

19
00:03:06.600 --> 00:03:25.350
Jae Young Lee: If he has a certain information associated with it in the graph, then such grief is coated with Chris. We can injure that way. It can be anything, just general information and objects, but usually we just call it a weight in the simplest case just number

20
00:03:30.870 --> 00:03:31.500
Jae Young Lee: Given a

21
00:03:32.820 --> 00:03:33.750
Jae Young Lee: Directed graph.

22
00:03:35.580 --> 00:03:43.050
Jae Young Lee: We have a two kinds of ages from, from the perspective of an edge, for example.

23
00:03:44.460 --> 00:03:46.770
Jae Young Lee: So from the perspective of a note.

24
00:03:47.850 --> 00:03:57.420
Jae Young Lee: For additional there are two edges coming in. So they are incoming edge. And there's one day going out this outgoing edges.

25
00:03:59.040 --> 00:04:06.060
Jae Young Lee: Degree degree of a node is number of edges data instance to that.

26
00:04:07.380 --> 00:04:27.000
Jae Young Lee: Degree of this node piece 123 in degree is number of incoming edges out degree is the number of outgoing. He is so for this note in degrees, one, two degrees one. So there's another example degree of this note.

27
00:04:28.080 --> 00:04:31.620
Jae Young Lee: It is 12345 ages, isn't it.

28
00:04:32.880 --> 00:04:43.680
Jae Young Lee: And there are 123 integrator incoming edges disintegrate. Want to outgoing edges stairs out during

29
00:04:48.840 --> 00:04:49.500
Jae Young Lee: If you look at

30
00:04:50.580 --> 00:04:57.900
Jae Young Lee: node a. And note, see there are two edges connecting these two, so they are called the parallel edges.

31
00:04:58.980 --> 00:05:04.230
Jae Young Lee: Dentist, he comes out of a note be and then it goes back to note

32
00:05:05.730 --> 00:05:07.290
Jae Young Lee: This is called the selfless

33
00:05:08.910 --> 00:05:12.480
Jae Young Lee: In from now on, unless there is a separate

34
00:05:14.460 --> 00:05:25.200
Jae Young Lee: Note, we always assume the graph, we are dealing with don't have payroll edges and they don't have self test underlying assumption.

35
00:05:25.770 --> 00:05:41.130
Jae Young Lee: If we get either of them for certain application, then we will stated explicitly explicitly and separate. So again, we assume the graph, we will do with have no edges and no cell phones.

36
00:05:46.680 --> 00:05:51.780
Jae Young Lee: We actually talked about a path when we were discussing a binary tree and

37
00:05:53.850 --> 00:05:54.780
Jae Young Lee: F is

38
00:05:56.130 --> 00:05:59.820
Jae Young Lee: It can be expressed as a sequence of footage a sequence.

39
00:06:02.130 --> 00:06:03.090
Jae Young Lee: This is a path.

40
00:06:04.410 --> 00:06:18.180
Jae Young Lee: So we can express this sequence of A, C, D, E, or we can express this one edge, A, C, followed by edgy CT followed by a GT. This is a

41
00:06:19.620 --> 00:06:25.650
Jae Young Lee: Website cycle when we present a path as a sequence of purchases

42
00:06:27.660 --> 00:06:33.450
Jae Young Lee: Cycle in a cycle. A for texts appears more than was we offer

43
00:06:38.910 --> 00:06:48.840
Jae Young Lee: But there's a, you know, the notion of cycle. We're just trying to define just a little bit formal in the context of a graph. So, this is

44
00:06:51.600 --> 00:06:57.990
Jae Young Lee: A see an attack. Yeah, correct. A, B, C, D, E,

45
00:06:59.430 --> 00:06:59.640
Jae Young Lee: So,

46
00:07:00.870 --> 00:07:05.070
Jae Young Lee: This note that peers, more than once, which may said, we have a

47
00:07:06.420 --> 00:07:08.550
Jae Young Lee: It could be. It doesn't have to be in this way.

48
00:07:09.870 --> 00:07:10.830
Jae Young Lee: A

49
00:07:11.970 --> 00:07:23.370
Jae Young Lee: Don't have enough notes here we go through multiple Pettis, a P E, A, C, D, and

50
00:07:24.600 --> 00:07:29.670
Jae Young Lee: I begin at the node A then I end a note be but

51
00:07:31.410 --> 00:07:42.300
Jae Young Lee: In became a grant through the cycle. What I'm trying to say is that a note can appear in any place as far as it forms a cycle was so

52
00:07:44.010 --> 00:07:46.260
Jae Young Lee: Simple path is a path.

53
00:07:47.460 --> 00:07:48.210
Jae Young Lee: There's no site.

54
00:07:49.440 --> 00:07:51.270
Jae Young Lee: Supervisor cycle. This is a simple send

55
00:07:52.470 --> 00:07:59.580
Jae Young Lee: A note appears twice in the sequence only at the beginning and at the end. So this is a simple

56
00:08:01.620 --> 00:08:06.510
Jae Young Lee: English discipline or less using that example more

57
00:08:24.210 --> 00:08:26.010
Jae Young Lee: So this is a simple side.

58
00:08:29.130 --> 00:08:29.520
Jae Young Lee: If

59
00:08:31.950 --> 00:08:32.370
Jae Young Lee: We have

60
00:08:33.660 --> 00:08:34.890
Jae Young Lee: One more note here.

61
00:08:39.600 --> 00:08:39.900
Jae Young Lee: Then

62
00:08:41.820 --> 00:08:42.810
Jae Young Lee: Focal through

63
00:08:49.110 --> 00:08:49.680
Jae Young Lee: This way.

64
00:08:51.300 --> 00:09:03.900
Jae Young Lee: Then a pierced, not only at the beginning and at the end, it appears in between. Samia, then it is not the same process again. Simple cycle. It is a path where

65
00:09:05.730 --> 00:09:13.620
Jae Young Lee: The same note that appears at the beginning and at the end in the door. Other nose appears or the noise. There's a simple cycle.

66
00:09:19.170 --> 00:09:29.100
Jae Young Lee: Versus the passage a passing interest graph. So this is a Pathan dirty cycle is a cycle in a directed graph. So, this is

67
00:09:33.210 --> 00:09:33.930
Jae Young Lee: Connected

68
00:09:34.410 --> 00:09:36.210
Saurav Banerjee: Professor one question on the path.

69
00:09:38.250 --> 00:09:48.420
Saurav Banerjee: In this in this particular diagram on a non directed graph. How many paths are possible. So is he sees a bath a CBS all took back and easy.

70
00:09:48.660 --> 00:09:50.670
Jae Young Lee: To just just just, just give me a minute.

71
00:09:51.720 --> 00:09:53.760
Jae Young Lee: To go. Could you say that again slowly.

72
00:09:54.360 --> 00:09:57.180
Saurav Banerjee: So in a undetected graph.

73
00:09:57.390 --> 00:10:00.360
Jae Young Lee: And directed graph. Okay, so just give me see. Let me erase this

74
00:10:04.710 --> 00:10:05.730
Jae Young Lee: Yes, go ahead. Yes.

75
00:10:06.030 --> 00:10:11.640
Saurav Banerjee: My question is, are how many paths are possible in this particular and directed graph.

76
00:10:12.600 --> 00:10:13.230
Oh,

77
00:10:14.850 --> 00:10:24.930
Jae Young Lee: I don't have an immediate answer. So the IT DEPENDS ON. SO WE CAN I think we can come up with a maximum number Pettis, so we can't

78
00:10:26.520 --> 00:10:37.350
Jae Young Lee: I don't think we have a formula for any arbitrary graph, but for this graph, we just have to count. Okay, I don't know, a lot of

79
00:10:40.080 --> 00:10:40.530
Saurav Banerjee: Multiple

80
00:10:41.460 --> 00:10:46.080
Jae Young Lee: This is a test, test, test, this is a this is a pitch.

81
00:10:47.190 --> 00:10:57.090
Jae Young Lee: So again we can come up with a formula that says upper bound. So assuming there are no parole edges, assuming

82
00:10:58.260 --> 00:11:08.220
Jae Young Lee: No self loops, then I think we can call me the formula data Paula, I just happened to not remember that. But we can call it easily.

83
00:11:09.510 --> 00:11:16.530
Jae Young Lee: In terms of its just actual number that is the only way to find it out. It just count. There's no other way.

84
00:11:17.610 --> 00:11:17.940
Saurav Banerjee: Okay.

85
00:11:18.990 --> 00:11:29.730
Saurav Banerjee: And the other question is, so can you explain the difference between a vertex sorry edge and the village. I didn't follow the definition of cartilage

86
00:11:30.330 --> 00:11:35.070
Jae Young Lee: Is a pair of edges. So there are two edges connecting ANC

87
00:11:40.260 --> 00:11:40.650
Saurav Banerjee: Thank you.

88
00:11:43.530 --> 00:11:44.520
Jae Young Lee: connected graph.

89
00:11:45.090 --> 00:11:53.580
Franklyn: So rough. Excuse me, sir. See, going back to that paragraph. Right. I see a D and E are they also consider power because

90
00:11:54.840 --> 00:11:56.100
Franklyn: The, the, and

91
00:11:56.130 --> 00:11:57.450
Jae Young Lee: It is correct.

92
00:11:58.530 --> 00:11:59.130
Jae Young Lee: You're correct.

93
00:12:02.040 --> 00:12:02.550
Thank you.

94
00:12:05.640 --> 00:12:25.200
Jae Young Lee: A graph is a connected cliff. If there's a path from a goat to every other node. So, from here I can digit path from seed to a seat and PC 20 then from be I can go to any other node through some passes.

95
00:12:26.400 --> 00:12:38.490
Jae Young Lee: So general definition is, is it not just a definition is there is a path from a note to every other node stressor connected graph that shows me connected graph.

96
00:12:39.750 --> 00:12:54.330
Jae Young Lee: Showing you connected graph is defined only for a directed graph as strongly connected. Again, strongly connected graph is defined only for a directed graph if there's an edge from a note to every other

97
00:12:55.530 --> 00:12:59.220
Jae Young Lee: Thursday, a path from a note to every other

98
00:13:00.390 --> 00:13:11.670
Jae Young Lee: So from sea to a C to D and the A to Z. Ey, to be. I can go this way I can go this way and that a to see

99
00:13:12.870 --> 00:13:19.770
Jae Young Lee: If I can go from a note to every other node in a directed graph and it is called it's showing connected

100
00:13:25.230 --> 00:13:37.950
Jae Young Lee: So graph geezer general technologist, as we discussed a lot of them, some of them basically the name suggests meanings. So usually we don't forget

101
00:13:39.390 --> 00:13:51.090
Jae Young Lee: Maybe so we may forget, but usually it is that we can remember or look it up quite quickly. It is very important. I'm not saying they're not important but

102
00:13:51.720 --> 00:14:02.310
Jae Young Lee: What I'm trying to say is that this is important. This definition because one of the algorithms, we will discuss later is a minimum spanning tree and then

103
00:14:03.660 --> 00:14:08.130
Jae Young Lee: To keep five minimum spanning tree. First we have to define the spending so

104
00:14:09.390 --> 00:14:15.660
Jae Young Lee: First we begin to the sub sub they say we have a G H graph.

105
00:14:16.890 --> 00:14:23.400
Jae Young Lee: Is a Tupelo 740 system set of edges. So, another great so he

106
00:14:25.110 --> 00:14:30.600
Jae Young Lee: Just said of vertices we try and set up edges. A prime if

107
00:14:32.100 --> 00:14:35.250
Jae Young Lee: We prime is a subset of three and

108
00:14:37.230 --> 00:14:56.400
Jae Young Lee: He is a subset of A, then we say, gee, prime which is great for he suggests a technician, but the given a actual growth is easy to find. But I did find a sub graph. Given a graph. There are many sub graphs.

109
00:14:57.420 --> 00:14:57.750
Jae Young Lee: So,

110
00:14:59.160 --> 00:15:12.090
Jae Young Lee: A craft consisting of those a PC. He, along with these three red edges so Teddy's itself will focus on just shown as an example. Yeah. Spinning StarCraft

111
00:15:13.380 --> 00:15:22.320
Jae Young Lee: StarCraft it is soccer, but it has all 40s. So with a spinning sub graph sa T. 's

112
00:15:23.910 --> 00:15:31.500
Jae Young Lee: We for a prime, then we crime is basically this MSP then he prime is a subset of

113
00:15:34.950 --> 00:15:43.440
Jae Young Lee: Spending sub graph is a breath that includes all knows all parties. So this is an example of his paintings

114
00:15:48.390 --> 00:15:52.860
Jae Young Lee: Versus tree tree redefined previous to this.

115
00:15:56.850 --> 00:15:57.300
Jae Young Lee: We have

116
00:15:59.370 --> 00:16:04.980
Jae Young Lee: It connected graph here another connected graph here, but they are not connected to each other.

117
00:16:06.120 --> 00:16:17.640
Jae Young Lee: I can't go from D to E or from A to Z. So then we have a decision tree. The tree. So we call such a graphic forest decision tree.

118
00:16:18.690 --> 00:16:21.900
Jae Young Lee: We know that we define the tree. It is 100

119
00:16:23.070 --> 00:16:30.750
Jae Young Lee: And a site. So what was the one I forget and directed a cyclic

120
00:16:36.510 --> 00:16:41.580
Jae Young Lee: I forget what was the difference. Does anybody remember the fall definition of a tree.

121
00:16:43.770 --> 00:16:48.150
Jae Young Lee: A cyclic undirected citizen one more condition.

122
00:16:48.840 --> 00:16:49.560
Christine Grosso: Sub Graph.

123
00:16:51.630 --> 00:16:52.890
Sherard Howe: Can be joining

124
00:16:54.780 --> 00:16:55.290
Jae Young Lee: So,

125
00:16:56.880 --> 00:16:58.740
Jae Young Lee: Let's go to

126
00:17:01.890 --> 00:17:03.000
Jae Young Lee: Sometimes I forget.

127
00:17:06.960 --> 00:17:07.950
Jeff O'Connell: Directed

128
00:17:08.940 --> 00:17:11.430
Jae Young Lee: This go there and look at the

129
00:17:12.960 --> 00:17:16.860
Jae Young Lee: Binary tree was 980

130
00:17:21.570 --> 00:17:22.380
Jae Young Lee: Connected

131
00:17:22.800 --> 00:17:24.540
Jae Young Lee: Correct connected. Yes.

132
00:17:26.070 --> 00:17:26.940
Jae Young Lee: Thank you.

133
00:17:28.140 --> 00:17:28.650
Christine Grosso: Welcome

134
00:17:30.360 --> 00:17:37.920
Jae Young Lee: Connected and directly to a site. So this is a tree all purchases are connected

135
00:17:39.300 --> 00:17:44.910
Jae Young Lee: Then there's no cycle. And so this is a so forest entry now spinning

136
00:17:47.250 --> 00:17:52.290
Jae Young Lee: Spinning creative circus spinning circle which we just talked about spending so

137
00:17:55.050 --> 00:17:57.330
Jae Young Lee: And then it happens to be a tree.

138
00:18:00.150 --> 00:18:01.650
Jae Young Lee: For example, let's look at here.

139
00:18:11.340 --> 00:18:21.750
Jae Young Lee: This is a spinning sub graph. So, this is so graph, and that includes all vertices, but this is not the spanning tree because there's a cycle.

140
00:18:22.770 --> 00:18:26.160
Jae Young Lee: So there's a difference between spinning sub graph and spinning up

141
00:18:27.870 --> 00:18:32.670
Jae Young Lee: Spanning Tree spanning tree is a spinning sub graph that is a tree.

142
00:18:36.390 --> 00:18:40.410
Jae Young Lee: Now, a son basically properties of a tree.

143
00:18:41.430 --> 00:18:48.570
Jae Young Lee: A spiritually some relationships between number of vertices, a number of nodes and number of edges so

144
00:18:51.750 --> 00:18:52.170
Jae Young Lee: If

145
00:18:53.550 --> 00:18:57.750
Jae Young Lee: This is a directed graph Emmys number of edges.

146
00:19:00.450 --> 00:19:03.330
Jae Young Lee: So suppose we have a graph.

147
00:19:05.760 --> 00:19:07.350
Jae Young Lee: Then if I want to count.

148
00:19:09.270 --> 00:19:17.040
Jae Young Lee: The degrees of all those. So when I count degrees degree of this note, I would count 123

149
00:19:18.240 --> 00:19:21.930
Jae Young Lee: Then when I count degree of this note, I will count one, two,

150
00:19:23.010 --> 00:19:34.560
Jae Young Lee: When I can't degree of does not count one, two. So as you can see, each age is counted twice. So some degrees of all those is twice the number of edges.

151
00:19:35.610 --> 00:19:36.990
Jae Young Lee: But we detect to graph.

152
00:19:38.010 --> 00:19:43.230
Jae Young Lee: The account it only once for in as an integrator or out

153
00:19:44.580 --> 00:19:49.080
Jae Young Lee: He doing he is in incoming or outgoing

154
00:19:51.540 --> 00:19:52.080
Jae Young Lee: So, for

155
00:19:53.400 --> 00:20:07.590
Jae Young Lee: This one we counted as an industry or it's not. Then out of this note, but it is not counted into real this note and in degree or not at same time so

156
00:20:08.790 --> 00:20:09.240
Jae Young Lee: If we

157
00:20:10.860 --> 00:20:27.630
Jae Young Lee: Get the sum of in degrees of all those then when we count that each age is counted only was so this is the industry or this one or incoming edge of this one. This is incoming edge of this one. This is incoming edge of this only three. So that is

158
00:20:28.650 --> 00:20:30.150
Jae Young Lee: The same as number of edges.

159
00:20:31.320 --> 00:20:35.460
Jae Young Lee: And then it is the same with our degree or outgoing edges.

160
00:20:36.660 --> 00:20:39.420
Jae Young Lee: You know, the maximum number of edges.

161
00:20:42.480 --> 00:20:44.970
Jae Young Lee: Suppose we have a graph.

162
00:20:49.200 --> 00:20:54.330
Jae Young Lee: And 40 system from one edge.

163
00:20:55.590 --> 00:21:04.110
Jae Young Lee: So I can draw. How many from one note, I can draw at most three edges that is n minus from one

164
00:21:05.340 --> 00:21:05.940
Jae Young Lee: At most,

165
00:21:07.080 --> 00:21:09.150
Jae Young Lee: Premier 123

166
00:21:10.470 --> 00:21:12.720
Jae Young Lee: And then since there are n those

167
00:21:14.190 --> 00:21:19.920
Jae Young Lee: And most and invite us. So that is basically and

168
00:21:22.470 --> 00:21:23.640
Jae Young Lee: N minus one.

169
00:21:30.780 --> 00:21:31.920
Jae Young Lee: Divided by two.

170
00:21:35.460 --> 00:21:38.520
Jae Young Lee: Emmys at most n n minus one divided by

171
00:21:40.320 --> 00:21:52.470
Jae Young Lee: That if geez it directed graph, then it is a half of that, like we discussed here. So I think would skip that part. I will leave that part two. You don't think you have any difficulties.

172
00:21:54.210 --> 00:21:54.450
Jae Young Lee: Now,

173
00:22:01.530 --> 00:22:05.460
Jae Young Lee: If we have an undirected craft that it is connected

174
00:22:09.570 --> 00:22:10.860
Jae Young Lee: This is a minimum

175
00:22:13.170 --> 00:22:13.950
Jae Young Lee: To connect

176
00:22:15.540 --> 00:22:35.640
Jae Young Lee: Good example. Suppose there are four knows that to connect all these purchases. I need at least three edges. That's what it is. So this is minimum number of edges in a connected graph is one less than number knows it is

177
00:22:37.140 --> 00:22:44.070
Jae Young Lee: I need three I can't connect for 40 series of photos with only two as it is impossible.

178
00:22:45.360 --> 00:22:53.400
Jae Young Lee: If it is a tree. Actually, this is a tree traditional cycle. So then it is to say, Miss n minus one.

179
00:22:55.350 --> 00:23:11.070
Jae Young Lee: And this was a maximum or minimum and could be larger. So like large, large, but if it is a tree. If there's no cycle then aim is exactly and my ass excusing forest, they're separated and

180
00:23:12.900 --> 00:23:20.220
Jae Young Lee: Then, and could be smaller than that is n minus. So, in this case m is one, two, and his phone. That's what

181
00:23:30.480 --> 00:23:30.930
Jae Young Lee: Okay.

182
00:23:32.880 --> 00:23:37.650
Jae Young Lee: Now what we are looking at is our textbooks implementation of a

183
00:23:38.790 --> 00:23:40.440
Jae Young Lee: Graph data structure.

184
00:23:42.570 --> 00:23:47.970
Jae Young Lee: Like our textbook always sauce it first. It defines abstracts data type.

185
00:23:49.350 --> 00:24:02.010
Jae Young Lee: Then you know that when we define extract data types we define operations. Then I'll text implements that extract data type a Java interface so

186
00:24:02.550 --> 00:24:22.080
Jae Young Lee: But for our course we will discuss that part. So I put this on, just a little bit. Just for your information, but you don't have to be concerned about our textbooks implementation of graph data structure. So just consider this is just for your information,

187
00:24:24.210 --> 00:24:30.540
Jae Young Lee: Many operations here and then also some running times of different this one actually

188
00:24:31.680 --> 00:24:51.390
Jae Young Lee: Has a running times with regard to different internal data structures we which we didn't discuss it as the point is that that don't worry about this abstract data type definition as defined in our textbook our textbooks graph data structure is very

189
00:24:52.560 --> 00:24:59.760
Jae Young Lee: First, it is very first of all, it is very flexible, then it's a very, very powerful in some sense, but it is very complex.

190
00:25:00.270 --> 00:25:05.640
Jae Young Lee: Usually for a simple application that needs a graph, we don't need

191
00:25:06.450 --> 00:25:24.030
Jae Young Lee: It, we should not use it is very heavy hitting the surface because there's a performance implications, but in some applications this kind of complex data structure might be necessary, but my guess is our textbook tries to define in

192
00:25:25.080 --> 00:25:35.430
Jae Young Lee: As more general way as possible. That's what our textbook is trying to you so you don't have to be concerned about this.

193
00:25:38.310 --> 00:25:43.620
Jae Young Lee: Now we are discussing two different ways of representing a graph.

194
00:25:45.060 --> 00:25:47.550
Jae Young Lee: In our program as an internal data structure.

195
00:25:48.690 --> 00:25:55.410
Jae Young Lee: I have some comments later. But let's just stick with what our textbook doesn't

196
00:25:56.460 --> 00:26:00.090
Jae Young Lee: The first one is called the he lists. So we have a list of edges.

197
00:26:02.940 --> 00:26:05.820
Jae Young Lee: And also, we actually have a list of purchases

198
00:26:07.530 --> 00:26:23.790
Jae Young Lee: Each list can be implemented using any appropriate data structure, it is, it can be implemented using a linked list or if you're using a Java program languishing then you can implement each of them with an array list. So it depends on

199
00:26:24.990 --> 00:26:30.420
Jae Young Lee: Now, so we have a list of edges. So he connects to participate.

200
00:26:32.370 --> 00:26:36.120
Jae Young Lee: This is a list of pointers or reference to

201
00:26:37.440 --> 00:26:38.070
Jae Young Lee: An S.

202
00:26:39.120 --> 00:26:52.080
Jae Young Lee: In our textbooks representation. He is an object such as a separate agent class edges and optics. So this is a pointer to an edge over that it is two pointers.

203
00:26:53.760 --> 00:27:10.050
Jae Young Lee: One for each of those two and north. And so a point to you and three he points to the view and extract this data structures called the ag list so we can store our graph using this data search

204
00:27:12.150 --> 00:27:13.170
Jae Young Lee: Jason see this

205
00:27:17.160 --> 00:27:21.210
Jae Young Lee: Okay, so let's just stick to our textbooks representation. So

206
00:27:22.380 --> 00:27:23.700
Jae Young Lee: Making some comments later.

207
00:27:25.020 --> 00:27:27.720
Jae Young Lee: We have a list of vertices List of notes.

208
00:27:30.240 --> 00:27:37.170
Jae Young Lee: Then each node has a pointer to a collection of ages. So, it is called the essence collection.

209
00:27:38.430 --> 00:28:01.890
Jae Young Lee: Here this instance collection is a set of edges that our essence to that North Pole, you know, do we have three edges instance to you. So a PNC desert edges are included in this instance collection for node x we have ages, C, D, and

210
00:28:05.760 --> 00:28:11.370
Jae Young Lee: Just let me finish the implementation of this essence collection is basically

211
00:28:13.020 --> 00:28:15.540
Jae Young Lee: Determined by the program for writing this book.

212
00:28:16.770 --> 00:28:17.430
Jae Young Lee: Yes, go ahead.

213
00:28:18.270 --> 00:28:19.140
Saurav Banerjee: Yeah. So, for

214
00:28:20.760 --> 00:28:26.040
Saurav Banerjee: Edge. How would we use the previous data structure to store it. So will that have

215
00:28:26.340 --> 00:28:27.900
Jae Young Lee: Shown this one.

216
00:28:28.230 --> 00:28:29.910
Saurav Banerjee: Yes. So in this case, how

217
00:28:29.940 --> 00:28:31.470
Saurav Banerjee: They presented knowledge.

218
00:28:31.770 --> 00:28:38.460
Jae Young Lee: Or not you have to modify the data as it is. We can't be present a pedal edge as it is so

219
00:28:39.510 --> 00:28:41.760
Jae Young Lee: Then what you need is

220
00:28:44.310 --> 00:28:48.330
Jae Young Lee: You have to allow multiple the ball edges here.

221
00:28:49.410 --> 00:28:52.050
Jae Young Lee: Then you have to allow the situation.

222
00:28:53.700 --> 00:28:55.230
Jae Young Lee: There's a parameter

223
00:28:58.200 --> 00:29:09.030
Jae Young Lee: Which means that the number of edges must include all individual edges, including this pearl edges. So this a prime will be also pointing to you and v, but

224
00:29:10.290 --> 00:29:24.510
Jae Young Lee: This object A again in our textbooks implementation. This is a one object when he says it another day or two different objects. So they are simply two different elements in this data structure. Okay.

225
00:29:25.800 --> 00:29:26.130
Saurav Banerjee: Thank you.

226
00:29:29.100 --> 00:29:31.440
Jae Young Lee: Okay, so this is Jason at least

227
00:29:33.690 --> 00:29:45.450
Jae Young Lee: For this instance colloquium this technology, our technical users and not everybody uses a system knowledge, but this instance collection is used again in the next slide, not next next

228
00:29:47.940 --> 00:29:49.470
Jae Young Lee: Oh yeah, we just didn't seem to have

229
00:29:50.970 --> 00:29:58.500
Jae Young Lee: Basically the same as Jason to list the differences that instance collection is a map. It is a mapping

230
00:30:01.620 --> 00:30:05.550
Jae Young Lee: mapping from a vertex to an edge.

231
00:30:07.110 --> 00:30:10.020
Jae Young Lee: As you can see here, though, do you, it is three.

232
00:30:11.580 --> 00:30:12.150
Jae Young Lee: Edges.

233
00:30:13.380 --> 00:30:18.150
Jae Young Lee: Now, also it has three adjacent the 43 x

234
00:30:19.260 --> 00:30:28.470
Jae Young Lee: So in this instance collection, we have a mapping from free to a that is here yet to see that is this one.

235
00:30:29.520 --> 00:30:30.060
Jae Young Lee: W.

236
00:30:31.140 --> 00:30:32.190
Jae Young Lee: W to do

237
00:30:33.930 --> 00:30:36.090
Jae Young Lee: It the same with all other instances.

238
00:30:37.470 --> 00:30:37.680
So,

239
00:30:38.820 --> 00:30:40.350
Jae Young Lee: Which of course

240
00:30:42.090 --> 00:30:43.500
Jae Young Lee: We have let's discuss this one.

241
00:30:47.280 --> 00:30:57.720
Jae Young Lee: This representation is called a Jason see matrix it is a two dimensional matrix, the size of dimension of this matrix is

242
00:31:01.650 --> 00:31:04.860
Jae Young Lee: And he is the number we're just, it is n by n matrix.

243
00:31:05.940 --> 00:31:11.700
Jae Young Lee: In this example, we have four nodes. So this is a four by four matrix.

244
00:31:13.860 --> 00:31:21.480
Jae Young Lee: The index is a matrix matrices Index. Index so matrix or integers. So we need a mapping

245
00:31:22.980 --> 00:31:33.390
Jae Young Lee: From those two in depth. So you is mapped to zero or zero ve W, X two, X three and so this is a semi you

246
00:31:37.230 --> 00:31:45.690
Jae Young Lee: In this example, this is a way to the graph each edge is associated a rate in this case. Wait, is it just object itself.

247
00:31:47.310 --> 00:31:47.730
Jae Young Lee: So,

248
00:31:49.470 --> 00:32:00.690
Jae Young Lee: At the intersection of a row and column corresponding to to those for you and we we put this edge or we saw this edge object here.

249
00:32:01.740 --> 00:32:07.140
Jae Young Lee: If this he has a certain weight which has put weight over there.

250
00:32:08.250 --> 00:32:23.970
Jae Young Lee: Anyway, in this example, we are showing just he is often an edge itself is an old so here he is putting notes on in three it is between you and us.

251
00:32:25.260 --> 00:32:26.850
Jae Young Lee: One and three ser un x

252
00:32:28.800 --> 00:32:29.220
Jae Young Lee: Is

253
00:32:30.330 --> 00:32:31.140
Jae Young Lee: What was

254
00:32:32.580 --> 00:32:38.310
Jae Young Lee: These free and so I'm just brilliant. Excellent. Brilliant excellent HD and so

255
00:32:40.530 --> 00:32:42.720
Jae Young Lee: This representation is called a

256
00:32:43.740 --> 00:32:45.060
Jae Young Lee: Jason see matrix.

257
00:32:50.640 --> 00:32:51.930
Jae Young Lee: So first,

258
00:32:53.550 --> 00:32:54.060
Jae Young Lee: If

259
00:32:57.300 --> 00:32:59.580
Jae Young Lee: A graph is not a weighted graph.

260
00:33:02.010 --> 00:33:17.760
Jae Young Lee: We put two ones here on one one and then if there's no edge between two producers, we put zero, it just 111111 indicates there's an edge between those two those

261
00:33:18.270 --> 00:33:32.430
Jae Young Lee: Then this matrix. As you can see this symmetrical. So if you to a diagonal here, then it is a mirror image. This one that does this match all this metric. Because if there's an edge connecting you and then

262
00:33:33.690 --> 00:33:34.710
Jae Young Lee: There's an entry.

263
00:33:36.540 --> 00:33:43.260
Jae Young Lee: You be and also we you please. And then we you

264
00:33:45.150 --> 00:33:50.940
Jae Young Lee: Know advantages over this Jason's matrix is it is fast.

265
00:33:52.680 --> 00:33:57.660
Jae Young Lee: You know, the advantage of an array, array accessing and elements in an average very fast.

266
00:33:59.490 --> 00:34:01.170
Jae Young Lee: Given a note.

267
00:34:03.030 --> 00:34:03.300
Jae Young Lee: Then

268
00:34:04.500 --> 00:34:18.060
Jae Young Lee: What to knows that, to see whether there's an edge or what is th connecting those two and we met those two nodes. Melissa you and next first lap you to zero, x two, three.

269
00:34:18.570 --> 00:34:34.950
Jae Young Lee: And you go to zero comma three matrix or 03 comma 06. This is a symmetric. You can go directly accessing on element in the array. It's very fast specify vintage disadvantages storage.

270
00:34:36.240 --> 00:34:40.740
Jae Young Lee: If number of noses HUNDRED AND WE NEED A 10,000

271
00:34:42.120 --> 00:34:44.370
Jae Young Lee: Short space. So it is a trade off.

272
00:34:46.110 --> 00:34:47.640
Jae Young Lee: Now, Jason CMS.

273
00:34:50.460 --> 00:34:54.390
Jae Young Lee: Actually in some applications. This could be very efficient.

274
00:34:56.070 --> 00:34:58.230
Jae Young Lee: In some applications. Suppose

275
00:34:59.400 --> 00:35:15.000
Jae Young Lee: You need to. It's easy to find a is adjacent for text of a note from you to be so with another data structure or us some mapping and then from there, you want to find this he quickly.

276
00:35:16.200 --> 00:35:24.750
Jae Young Lee: You know, that is very efficient as far as searches concern. So from you get up and go to the assessment.

277
00:35:29.160 --> 00:35:30.210
Jae Young Lee: That Jason she lists.

278
00:35:32.610 --> 00:35:45.120
Jae Young Lee: Again, that it depends on how this instance collection is implemented, usually we implement this essence collection is a linked list. Of course, we can also implemented. Implemented with the array list.

279
00:35:46.680 --> 00:35:54.870
Jae Young Lee: So advantage of this Jason solicited it doesn't use as much astrology as the Jason's in matrix.

280
00:35:56.280 --> 00:36:06.930
Jae Young Lee: But it is slow. So for example, if this is implemented as a linked list then to get all these three

281
00:36:08.100 --> 00:36:12.360
Jae Young Lee: Essence, the edges that the instance to the zoo. I have to scan.

282
00:36:13.920 --> 00:36:21.120
Jae Young Lee: You know that scan a linked list even released is slower than tester clear SEC accessing an element of

283
00:36:22.530 --> 00:36:23.790
Jae Young Lee: Get at least

284
00:36:26.070 --> 00:36:26.820
Jae Young Lee: The primary

285
00:36:27.870 --> 00:36:28.920
Jae Young Lee: Data structure is this

286
00:36:30.240 --> 00:36:33.720
Jae Young Lee: In a certain application. I have to find

287
00:36:36.270 --> 00:36:39.990
Jae Young Lee: To put this is an edge.

288
00:36:41.640 --> 00:37:00.360
Jae Young Lee: Again, it depends on the application. If that is case probably this data structure might be more appropriate. So each data structure has its own advantages and disadvantages, then we just have to choose appropriately, you know, on applications.

289
00:37:02.880 --> 00:37:05.910
Jae Young Lee: Now one comment here, which essentially

290
00:37:08.190 --> 00:37:09.750
Jae Young Lee: This is our textbooks.

291
00:37:11.160 --> 00:37:16.800
Jae Young Lee: Representation of adjacent to this, but usually we don't do this.

292
00:37:18.750 --> 00:37:25.170
Jae Young Lee: It is not. We don't do it this way. Usually when we say we Jason at least what we

293
00:37:27.810 --> 00:37:29.250
Jae Young Lee: Are referring to is it

294
00:37:30.270 --> 00:37:33.240
Jae Young Lee: This one, suppose a

295
00:37:34.290 --> 00:37:36.090
Jae Young Lee: B. C.

296
00:37:37.140 --> 00:37:37.500
Jae Young Lee: D.

297
00:37:39.960 --> 00:37:46.080
Jae Young Lee: With the existentialist again, we have a list of those A, B, C, D.

298
00:37:47.670 --> 00:37:49.830
Jae Young Lee: And then that is his collection.

299
00:37:51.030 --> 00:37:58.200
Jae Young Lee: The essence collection we put purchases that usually, usually like A, B, C.

300
00:38:00.060 --> 00:38:00.420
Jae Young Lee: D.

301
00:38:01.650 --> 00:38:04.650
Jae Young Lee: Or having a CT not be a

302
00:38:08.880 --> 00:38:09.240
Jae Young Lee: So,

303
00:38:10.320 --> 00:38:16.980
Jae Young Lee: If you look at other data structure books are Williams books. This will be shown as an agency list.

304
00:38:19.320 --> 00:38:23.430
Jae Young Lee: So portal Jason's this old textbooks is a little bit heavy

305
00:38:24.870 --> 00:38:30.720
Jae Young Lee: Because each he is an object. So at this is more edge oriented.

306
00:38:31.800 --> 00:38:36.630
Jae Young Lee: Representation, which is a typical representation is more vertex or notes or anything.

307
00:38:38.100 --> 00:38:40.980
Jae Young Lee: Okay, I think we discussed page itself.

308
00:38:42.270 --> 00:38:48.930
Jae Young Lee: Graphs. Our textbook has more. But for our course. I think that that much is sufficient.

309
00:38:50.340 --> 00:38:53.880
Jae Young Lee: From here, now we discuss the craft algorithms.

310
00:38:55.650 --> 00:38:57.240
Jae Young Lee: For that any questions.

311
00:39:03.180 --> 00:39:03.690
Franklyn: Yes, sir.

312
00:39:04.740 --> 00:39:05.430
Jae Young Lee: Yes, go ahead.

313
00:39:05.910 --> 00:39:16.320
Franklyn: Yes, based on the urgency list that you just explained and the one that textbook implemented and why you said in order textbooks. They have which one is better.

314
00:39:17.040 --> 00:39:23.700
Jae Young Lee: Oh guess it depends on so application. So in certain applications are given a note.

315
00:39:27.600 --> 00:39:42.180
Jae Young Lee: So you want to be able to just identify edges quickly then this is more efficient, but given a note you want identify not edges. This is just the vertices quickly then that

316
00:39:42.930 --> 00:39:57.450
Jae Young Lee: Is more appropriate, but the in terms of actual running times running times absolutely at the same level, but the actual that execution speed light in terms of Pico Pico I think they are all the same.

317
00:39:58.350 --> 00:40:01.200
Franklyn: Okay, let's say you want. You, you, you, you have to look at

318
00:40:01.920 --> 00:40:05.490
Jae Young Lee: That particular application where you are using this data structure.

319
00:40:06.420 --> 00:40:18.210
Franklyn: Okay, let's say you want to identify both the edges. End of battles. You just want to go from G it to you from Utah v. And that's all you want. Identify also you want identify the edges. So, which

320
00:40:21.900 --> 00:40:25.080
Jae Young Lee: In that case, I think I would use this one but

321
00:40:26.850 --> 00:40:43.050
Jae Young Lee: From that Justin she lists. Usually we usually Jason's list when a graph is not a weighted graph because we don't have to be concerned about that edge itself the connectivity is automatically determined by

322
00:40:44.910 --> 00:40:56.310
Jae Young Lee: Again for this one, we have a dedicated list with you. And then we ended x and then w. So we have a

323
00:40:58.020 --> 00:41:01.230
Jae Young Lee: link list of those in essence collection so

324
00:41:02.610 --> 00:41:10.740
Jae Young Lee: From this data structure. I can identify both edges and practices because I know that

325
00:41:12.270 --> 00:41:16.050
Jae Young Lee: The fact that fees there means that there's an edge between the a and

326
00:41:17.280 --> 00:41:25.440
Jae Young Lee: The fact that x is zero means that there's an edge from a two x, but not maybe so against

327
00:41:27.960 --> 00:41:44.130
Jae Young Lee: When edgy is an object 10 probably just might be better. But if graph is not a weighted graph, which means that no additional information is associated with an edge. I think this is more efficient, more fast.

328
00:41:44.970 --> 00:41:51.390
Jae Young Lee: The fact that they implement a as an object itself is a we have a separate class definition it is slow.

329
00:41:52.200 --> 00:41:57.570
Franklyn: I see just because of the object of a. Okay, make sense. Thank you, sir.

330
00:41:59.940 --> 00:42:15.480
Jae Young Lee: But ultimately, sometimes it is not clear, because unless that application is relatively simple in terms of graph or operations on a graph. Sometimes it is not clear, then we just have to write

331
00:42:16.140 --> 00:42:23.100
Jae Young Lee: Again, in terms of people I think they are the same, but for actual execution time. You might have to experiment with

332
00:42:25.530 --> 00:42:26.010
Jae Young Lee: This

333
00:42:27.120 --> 00:42:27.450
Franklyn: Thank you.

334
00:42:28.830 --> 00:42:32.880
Jae Young Lee: Okay. So we first discussed Griff Trevor's or

335
00:42:34.080 --> 00:42:38.460
Jae Young Lee: If you remember, we discussed treatment versus so

336
00:42:40.260 --> 00:42:54.480
Jae Young Lee: Now we're discussing craft craft person like Twitter version. This is a systematic way of listing all those in a graph then also with a graph trip trip versus

337
00:42:55.980 --> 00:42:56.370
Jae Young Lee: We can

338
00:42:57.930 --> 00:43:03.870
Jae Young Lee: Achieve some other properties like a so called reach ability to given a note in a graph.

339
00:43:06.180 --> 00:43:20.490
Jae Young Lee: Is a path from the snow to some water, not, then we can run a graph, Trevor. So algorithms. And if that graph to reverse order can tell us whether there's a test from here to here. So, it is a

340
00:43:21.630 --> 00:43:26.280
Jae Young Lee: Finding a path that reach ability and connectivity. Then also

341
00:43:27.870 --> 00:43:39.210
Jae Young Lee: We did some we will discuss just basic graph triples or algorithms, but we they some additional code. We can also detect that it takes a cycle what whether

342
00:43:40.380 --> 00:43:46.260
Jae Young Lee: It is a graph is showing you connected Rhonda are going to those kind of things require

343
00:43:48.090 --> 00:43:57.720
Jae Young Lee: Some additional code, not just basic service or the desk for connected graph. This is 400 grams or similar information.

344
00:43:59.190 --> 00:44:12.000
Jae Young Lee: We will discuss to reversal algorithms gear fest depth for searching and prep for search this one we actually discussed when you're discussing tree we discussed E F Trevor's

345
00:44:14.580 --> 00:44:15.330
Jae Young Lee: Now let's

346
00:44:16.380 --> 00:44:21.330
Jae Young Lee: Look at the example first. And they will come up to this come back to this DFS

347
00:44:23.640 --> 00:44:26.550
Jae Young Lee: So we begin at a certain note, then

348
00:44:27.630 --> 00:44:28.230
Jae Young Lee: The

349
00:44:30.360 --> 00:44:36.270
Jae Young Lee: short description is that you just go until you get started so

350
00:44:37.650 --> 00:44:53.160
Jae Young Lee: From here, I can go to here or here, it doesn't really matter. Just go, just keep going. That just for the sake of our own discussion, we assume in our class whenever there is a choice.

351
00:44:54.270 --> 00:45:04.560
Jae Young Lee: Which means that from here I can go to P and D here whenever there is a choice. We assume we will always choose a note in alphabetical order.

352
00:45:05.790 --> 00:45:10.290
Jae Young Lee: So P is before the end of the quarter. So we call

353
00:45:11.490 --> 00:45:17.970
Jae Young Lee: That okay we just kept going. So from be I can go to C or E that see

354
00:45:19.110 --> 00:45:20.850
Jae Young Lee: Coated see of basically

355
00:45:21.870 --> 00:45:28.290
Jae Young Lee: From here, I can go to E and F again. We choose to go to E, because it is before f

356
00:45:29.400 --> 00:45:43.020
Jae Young Lee: Once we are at a there's only one outgoing edge which means I can go on here but he has been already finished it. So, which means I'm stopping once we can start with backtrack.

357
00:45:44.730 --> 00:45:59.160
Jae Young Lee: So that trip to see there, I have to see whether there are other other edge. I have to take the test one was taken in this case there's an HD is equal to f i think it is in the next slide.

358
00:46:01.740 --> 00:46:06.750
Jae Young Lee: So we can this way then backtrack and then quote

359
00:46:08.190 --> 00:46:25.080
Jae Young Lee: From there are two outgoing edges but he has been visited. So we go to G GS one outgoing edge. So he but he has been tested. So we are stuck. So we backtrack FCP a all day but

360
00:46:26.160 --> 00:46:35.670
Jae Young Lee: Again, each time we have the examiner that there's other way, but we don't have any items. So we track all the way to a tent. There we go.

361
00:46:36.780 --> 00:46:38.790
Jae Young Lee: So this is how DFS wants

362
00:46:41.850 --> 00:46:42.600
Jae Young Lee: Us to the course.

363
00:46:45.270 --> 00:46:46.050
Franklyn: Excuse me, sir.

364
00:46:46.530 --> 00:46:46.890
Franklyn: Yes.

365
00:46:47.460 --> 00:46:52.350
Franklyn: So basically the FSF occur if I'm wrong please correct me DFS

366
00:46:52.890 --> 00:46:57.270
Franklyn: Always arrange the element in ascending order.

367
00:46:58.620 --> 00:47:13.920
Jae Young Lee: No, no, no, just we just assume just to make our discussion, simple, it depends on that application. For example, oh, I understand, as I understand, when you say ascending order, Mr alphabetically. Right.

368
00:47:14.310 --> 00:47:21.060
Jae Young Lee: Right, that's what I did. But no, we don't always do that just we do that to make our discussion simple

369
00:47:22.080 --> 00:47:23.550
Jae Young Lee: Inaccurate applications.

370
00:47:24.690 --> 00:47:28.380
Jae Young Lee: If you order is not important. Just one of them is chosen randomly.

371
00:47:29.370 --> 00:47:37.590
Franklyn: Okay, so let's say we have we have an ad going to add going Ed coming out from A to he can we choose that.

372
00:47:38.670 --> 00:47:44.580
Jae Young Lee: Again, in general, yes, we can see it doesn't change the DFS the result doesn't change.

373
00:47:45.420 --> 00:47:45.750
Okay.

374
00:47:47.970 --> 00:48:06.990
Jae Young Lee: But again, to make our own discussion simple we assume whenever we have a choice. We always follow the purchases in alphabetical order. But that's just what we do, but in actual application. No, it is not necessary, they may do it, but they're not necessarily

375
00:48:07.710 --> 00:48:21.300
Franklyn: Okay, so let's say based based on our class that's because we want to make it so simple. Anytime we see a question. It could be test or whatever we should always assume we have to make it an alphabetical order or in order

376
00:48:21.570 --> 00:48:22.050
Franklyn: In order

377
00:48:22.650 --> 00:48:35.220
Jae Young Lee: Correct. But if, if, if there's a question wanted let's say in the quiz exam. So the same as dinner, I will have to mention the Palo Alto political or something.

378
00:48:36.240 --> 00:48:36.780
Franklyn: Thank you, sir.

379
00:48:42.390 --> 00:48:47.670
Jae Young Lee: So input arguments graph and then start nodding, so start at this naughty.

380
00:48:49.260 --> 00:48:52.170
Jae Young Lee: First we mark you as fish.

381
00:48:55.320 --> 00:48:55.650
And then

382
00:48:56.760 --> 00:49:00.990
Jae Young Lee: For each outgoing edges. So we have a you hear

383
00:49:02.370 --> 00:49:05.610
Jae Young Lee: Each outgoing edges agenda multiple edges.

384
00:49:06.870 --> 00:49:08.940
Jae Young Lee: So this is he won, he

385
00:49:10.290 --> 00:49:11.070
Jae Young Lee: Is me

386
00:49:12.270 --> 00:49:14.550
Jae Young Lee: It is we want to

387
00:49:16.800 --> 00:49:33.150
Jae Young Lee: Do this one for each of them. First we check whether it has been tested supposedly one has been tested, then we don't go there if we weren't has not been visited that we hold so free one is marked as face to face.

388
00:49:34.410 --> 00:49:42.690
Jae Young Lee: Them as we informally talked about the problem here. We just keep going, which means that we do the same thing, simply because of

389
00:49:43.890 --> 00:49:48.720
Jae Young Lee: The call itself because out the sun starts premier just keep going.

390
00:49:50.520 --> 00:50:05.250
Jae Young Lee: And as a kind of a record keeping. So our textbook. It is not a record keeping it in mind, I misspoke. We need it is it is not for the purpose of record keeper. We have to collect this edge.

391
00:50:06.720 --> 00:50:09.720
Jae Young Lee: So our textbook calls this edge discovery.

392
00:50:13.110 --> 00:50:21.390
Jae Young Lee: This energy is saved in a survey data structure like a radius to a steak or some other point is a discovery.

393
00:50:22.680 --> 00:50:22.950
Jae Young Lee: And then

394
00:50:24.360 --> 00:50:34.860
Jae Young Lee: We proceeded this so we keep going. Okay, this is the Christopher call suppose we start here then recursive called returns

395
00:50:36.420 --> 00:50:51.480
Jae Young Lee: From that call. So it will return to color which is the same DFS then that coming back or returning from a one recursive call is a backtracking to the previous one. So that backtracking is implemented.

396
00:50:52.560 --> 00:50:55.320
Jae Young Lee: Returning from a this call.

397
00:50:56.580 --> 00:51:04.200
Jae Young Lee: So we just keep one. Then once we start them at that that will be going either this way.

398
00:51:06.390 --> 00:51:08.940
Jae Young Lee: Now, the output is it

399
00:51:10.200 --> 00:51:13.110
Jae Young Lee: All vertices that are reachable from this not

400
00:51:14.250 --> 00:51:15.060
Jae Young Lee: Net also

401
00:51:16.770 --> 00:51:18.270
Jae Young Lee: All discovery edges.

402
00:51:19.530 --> 00:51:22.620
Jae Young Lee: And then basically all these discs discovery edges.

403
00:51:24.780 --> 00:51:27.090
Jae Young Lee: For me, so called a DFS tree.

404
00:51:28.950 --> 00:51:30.420
Jae Young Lee: So I'll come back to this one.

405
00:51:35.190 --> 00:51:37.350
Jae Young Lee: Let me see if I forget to put

406
00:51:38.490 --> 00:51:39.540
Jae Young Lee: Forward to it.

407
00:51:41.010 --> 00:51:41.760
Jae Young Lee: It is called a

408
00:51:42.270 --> 00:51:43.410
Jae Young Lee: DFS tree.

409
00:51:44.040 --> 00:51:44.940
Jae Young Lee: Yeah, so

410
00:51:48.630 --> 00:51:49.740
Jae Young Lee: Yeah, I put it here.

411
00:51:50.940 --> 00:51:56.610
Jae Young Lee: So Daniel. Let's talk about the later CFS. Oh. Classification of ages.

412
00:51:57.870 --> 00:52:02.610
Jae Young Lee: We don't do this classification of ages, all the time, but some applications.

413
00:52:05.280 --> 00:52:07.800
Jae Young Lee: disqualification of ages.

414
00:52:09.000 --> 00:52:12.240
Jae Young Lee: Is necessary or some helpful in some applications.

415
00:52:13.500 --> 00:52:15.450
Jae Young Lee: So we start from here.

416
00:52:16.800 --> 00:52:22.740
Jae Young Lee: What we get at the end is a tree. So I just briefly mentioned on the person. This is called a fist.

417
00:52:25.620 --> 00:52:27.270
Jae Young Lee: And then this is not

418
00:52:29.610 --> 00:52:46.920
Jae Young Lee: The fact this is the treatments that gives a hierarchy, you know that in a treat as a note. It is a parent or may have a parent, it may have a choice. So parent child relationship or in general ancestors descendants, the hierarchies that

419
00:52:49.500 --> 00:52:55.950
Jae Young Lee: We have three including these treaties this discovery ages are called the tree ages.

420
00:52:58.830 --> 00:53:05.310
Jae Young Lee: Because they are part of tears and then beyond this tree ages. We have three types of ages.

421
00:53:06.630 --> 00:53:15.930
Jae Young Lee: Ages for the edges cross edges, so they can put their defined in the context of the tire.

422
00:53:17.010 --> 00:53:17.250
Jae Young Lee: So,

423
00:53:18.300 --> 00:53:22.650
Jae Young Lee: Look at this one. We have an edge from he to see

424
00:53:23.850 --> 00:53:42.270
Jae Young Lee: But in the hierarchy of this tree that PFS three DFS trees Asian parents will be peace, a parent of see sees a parent. So this is caused from a note to experience. So it is a package. So in general.

425
00:53:43.470 --> 00:53:54.570
Jae Young Lee: And he edge is a big edge if he goes from a note to his ancestor. It could be a parent grandparent any excess baggage. Oh, this one here.

426
00:53:55.620 --> 00:53:59.820
Jae Young Lee: Here bees and grandparents, because we came down this way.

427
00:54:01.230 --> 00:54:02.640
Jae Young Lee: So this is a big edge.

428
00:54:04.890 --> 00:54:19.860
Jae Young Lee: Ford Edge is an edge connecting those two is a descendant. So from D to E DJ grandparents is a grandchild. So this is a descendant of it. So this is for

429
00:54:21.630 --> 00:54:23.790
Jae Young Lee: All remaining ages across ages.

430
00:54:25.440 --> 00:54:31.680
Jae Young Lee: Again, we don't need clarification, all the time, but in some applications. They are use

431
00:54:36.240 --> 00:54:39.660
Jae Young Lee: The same DFS on untreated graph.

432
00:54:41.370 --> 00:54:42.630
Jae Young Lee: But basically the sentence.

433
00:54:43.920 --> 00:54:53.790
Jae Young Lee: With a directed graph, we may not have all choices, depending on the direction of we may have a few choices because

434
00:54:54.780 --> 00:55:07.290
Jae Young Lee: We may not have a outgoing edges but here we have more choices. We don't have such restriction. Again, beginning at node a. We have two choices. Go to be then here.

435
00:55:08.190 --> 00:55:21.030
Jae Young Lee: There's only one choice, except this one coat. He now from once we are he we have 12345 edges data instance to eat. So through a whole bunch of choices.

436
00:55:21.570 --> 00:55:35.610
Jae Young Lee: He has been finished it. Then again, assuming you appalling alphabetical order to equal to see CSR so 123 but that is to have interested. So we go to see that's what

437
00:55:36.660 --> 00:55:58.140
Jae Young Lee: It is time we are stuck. So Patrick. Patrick now here. So we chose this one, but we still have other choices again. He is before others to finish. So we go to D, E, F, then we stopped. So the trick here and then called H and the quote

438
00:55:59.640 --> 00:56:02.220
Jae Young Lee: And I think that is Sean just step by step.

439
00:56:03.300 --> 00:56:10.890
Franklyn: Okay, sir, I have a quick question. Going back to from our stuff. If we choose an alphabetical order. We went to eat before they

440
00:56:13.740 --> 00:56:14.550
Jae Young Lee: Say this again what

441
00:56:14.970 --> 00:56:23.100
Franklyn: If we choose in alphabetical order based on what you said that we need to consider that. So why did we go he before going to the

442
00:56:23.850 --> 00:56:25.260
Franklyn: Oh, why

443
00:56:25.320 --> 00:56:27.120
Jae Young Lee: We came to he

444
00:56:27.450 --> 00:56:28.380
Jae Young Lee: From P. Right.

445
00:56:28.860 --> 00:56:30.150
Franklyn: Correct, but

446
00:56:30.240 --> 00:56:52.050
Jae Young Lee: There's no edge from B to D again alphabetical order doesn't mean we just list all those in alphabetical order. When we have a choice. We have a multiple choices. Then we choose one page or that alphabetical order from be actually we don't have a choice. We don't have a choice.

447
00:56:53.070 --> 00:57:01.230
Jae Young Lee: That goes to team. So again, alphabetical does not mean we just list all those in alphabetical order.

448
00:57:03.960 --> 00:57:04.380
Franklyn: Okay.

449
00:57:05.460 --> 00:57:06.750
Jae Young Lee: Any other questions.

450
00:57:13.590 --> 00:57:27.090
Jae Young Lee: Okay, there it is. There's a one question. Oh, no, that it is a if we collect all those discovery ages date from a tree cannot be any loop or any cycle.

451
00:57:30.390 --> 00:57:39.120
Jae Young Lee: The orders patient comparison know older is arbitrary in general. But as I mentioned, we just arbitrarily

452
00:57:40.680 --> 00:57:45.930
Jae Young Lee: Decided so will be feasting disorder in alphabetical order. But in general, not

453
00:57:47.430 --> 00:57:50.340
Jae Young Lee: It is not based on any comparisons.

454
00:57:59.820 --> 00:58:01.140
Jae Young Lee: Any other questions.

455
00:58:06.450 --> 00:58:10.620
Jae Young Lee: So if you look at the output of this one.

456
00:58:11.850 --> 00:58:14.760
Jae Young Lee: I'll put a collection of vertices data reachable from New

457
00:58:19.140 --> 00:58:24.360
Jae Young Lee: This this graphic connected graph. So we have all vertices

458
00:58:27.990 --> 00:58:29.550
Jae Young Lee: Post. I have a graph.

459
00:58:30.870 --> 00:58:32.040
Jae Young Lee: It looks like this.

460
00:58:33.750 --> 00:58:34.800
Jae Young Lee: undirected graphs.

461
00:58:37.650 --> 00:58:43.470
Jae Young Lee: If I start from here. I can't go over there. So I will get only these two vertices

462
00:58:45.630 --> 00:58:46.860
Jae Young Lee: That are reachable from this

463
00:58:48.030 --> 00:58:55.830
Jae Young Lee: But there's a DFS algorithm which actually featured all this note to. But again, this is just expansion, but

464
00:58:57.900 --> 00:59:05.430
Jae Young Lee: With this algorithm we get only those that a ritual for now let's continue this

465
00:59:14.310 --> 00:59:16.680
Jae Young Lee: Sorry, let me erase

466
00:59:25.980 --> 00:59:27.510
Jae Young Lee: So if we start from here.

467
00:59:28.950 --> 00:59:31.320
Jae Young Lee: We can't go there. So it is a directed graph.

468
00:59:32.850 --> 00:59:38.400
Jae Young Lee: So if we run a DFS, then I will get only this one and this one. So,

469
00:59:40.140 --> 00:59:42.030
Jae Young Lee: Again, once I'm here.

470
00:59:43.050 --> 00:59:48.750
Jae Young Lee: I can't go there. Then once I'm here even though I'm here. I can't go there. So there's what is meant by

471
00:59:50.550 --> 00:59:56.340
Jae Young Lee: Collection of purchases reachable from only those knows where I can go

472
00:59:57.720 --> 01:00:06.570
Jae Young Lee: So that's why one of the applications mentioned earlier is that basically, this can be used for which ability test.

473
01:00:08.370 --> 01:00:08.670
Jae Young Lee: Now,

474
01:00:20.760 --> 01:00:27.570
Jae Young Lee: When interesting, important. So we run a DFS on hundred graph.

475
01:00:28.740 --> 01:00:29.010
Jae Young Lee: Then

476
01:00:30.420 --> 01:00:34.650
Jae Young Lee: It is connected component. That means that little graph is connected

477
01:00:35.670 --> 01:00:36.900
Jae Young Lee: Connected components.

478
01:00:38.190 --> 01:00:38.730
Jae Young Lee: Is it

479
01:00:41.160 --> 01:00:41.910
Jae Young Lee: I didn't define

480
01:00:43.410 --> 01:00:54.060
Jae Young Lee: This is a graph by definition is a forest but forces is a Sukkah. So this is a connected component. This is a connected component. So in a forest.

481
01:00:54.990 --> 01:01:09.750
Jae Young Lee: Each individual sub graph is called a connected component. So I'm using that they're very informative individual self. So it should be well defined phone they defined, but I think you know what I mean is a connected component, this is connected

482
01:01:11.250 --> 01:01:14.190
Jae Young Lee: Suppose we start from here. This is notice

483
01:01:15.330 --> 01:01:20.610
Jae Young Lee: Then after running GFS. What we get is a spanning tree.

484
01:01:23.610 --> 01:01:32.580
Jae Young Lee: In this connected component because we can't go over there. But we what we get is a tree that includes all of them. So by definition it is a spinning

485
01:01:35.490 --> 01:01:51.360
Jae Young Lee: Then we they directed graph again, we have a all directed path is from the start. No to all other knows that. No, no. Not all other knows only those, those that are reachable from this, as we saw in the previous example.

486
01:01:54.480 --> 01:01:56.280
Jae Young Lee: If I start from you. I can't quote here.

487
01:01:57.990 --> 01:02:04.050
Jae Young Lee: I have it directed path this path from starts no to every other

488
01:02:05.100 --> 01:02:05.760
Jae Young Lee: Reachable

489
01:02:08.910 --> 01:02:10.260
Jae Young Lee: Writing time analysis.

490
01:02:11.670 --> 01:02:21.180
Jae Young Lee: I think we will discuss this one. But in general, running time is this is a little bit more accurate, but in general are running time is a

491
01:02:23.220 --> 01:02:27.840
Jae Young Lee: Certain age. This is a number of vertices number of edges.

492
01:02:29.580 --> 01:02:40.170
Jae Young Lee: This is general expression of the running time of a DFS people have said this is the entity and plus, but our texts will get a more

493
01:02:41.910 --> 01:02:44.700
Jae Young Lee: Specific with this is emotion.

494
01:02:47.070 --> 01:03:08.070
Jae Young Lee: So tested DFS now PFS since we discussed BFS along with trees. So I think you'll notice that the idea is the same. We start a certain note when and we visit first A knows that are one edge away from us. So in this example, D and see when he

495
01:03:09.630 --> 01:03:20.190
Jae Young Lee: Again, so this is our own assumption we assume whenever we have a choice. We visit those nose alphabetical which means that, but

496
01:03:20.790 --> 01:03:36.480
Jae Young Lee: So I think one of you mentioned that in general, it doesn't really matter. I can go to see or it doesn't really matter. But to make simple. We're so we're going to be force, which means that if I write pertussis.

497
01:03:37.830 --> 01:03:42.780
Jae Young Lee: Bye by the order off the pitches. A be writing p

498
01:03:44.070 --> 01:03:46.320
Jae Young Lee: Next, see. So we are

499
01:03:49.650 --> 01:03:59.880
Jae Young Lee: Then, next we have to visit those that a twitch away. There are GN but then we start from here. So, not from here.

500
01:04:04.950 --> 01:04:05.430
So it is

501
01:04:07.290 --> 01:04:08.880
Jae Young Lee: Dead. After that I go to.

502
01:04:11.280 --> 01:04:14.490
Jae Young Lee: E and G here.

503
01:04:18.060 --> 01:04:18.360
Jae Young Lee: He

504
01:04:21.570 --> 01:04:31.620
Jae Young Lee: The order was that determined by these two the nose, of course, in this case, he comes before changing of vertical order to determine the path this order.

505
01:04:33.330 --> 01:04:44.580
Jae Young Lee: He comes before. See, so we visit those that is one he away from Pete first before feasting a note G which is one edge away from

506
01:04:46.650 --> 01:04:46.920
Jae Young Lee: Then

507
01:04:49.260 --> 01:04:50.520
Jae Young Lee: G. No way.

508
01:04:51.540 --> 01:05:05.010
Jae Young Lee: So from a again there are 123 those that are one H away from me. So they are three edges away from a now so we're going to pitch it E F H debt.

509
01:05:06.210 --> 01:05:08.550
Jae Young Lee: To continue from there de

510
01:05:10.080 --> 01:05:14.460
Jae Young Lee: de force than f follow. Then he goes

511
01:05:17.010 --> 01:05:17.370
Jae Young Lee: No.

512
01:05:18.660 --> 01:05:25.500
Jae Young Lee: There's nothing I can go from the so there's nothing I can grow from F, G, H, I can't go there.

513
01:05:28.950 --> 01:05:34.650
Jae Young Lee: You can eat doesn't have to be in this way, I have to emphasize, we do that just for our own

514
01:05:36.540 --> 01:05:39.420
Jae Young Lee: Benefit to make our discussion so that

515
01:05:43.980 --> 01:05:46.500
Jae Young Lee: This is a PFS any questions.

516
01:05:50.940 --> 01:05:51.660
Frank wu: Professor

517
01:05:53.580 --> 01:05:58.980
Frank wu: So it's like a Congo either B or C.

518
01:05:59.280 --> 01:06:00.030
Frank wu: By the being

519
01:06:00.090 --> 01:06:02.820
Frank wu: Real practice. He can't go.

520
01:06:04.020 --> 01:06:12.090
Frank wu: Like be and then go he all a go. See, and then go D or E. Right.

521
01:06:16.260 --> 01:06:22.200
Jae Young Lee: You could say that, but we don't do that, the simple reason is that you can write a program

522
01:06:23.460 --> 01:06:31.470
Jae Young Lee: Tell us in your own life, because it is arbitrary. So when you write an algorithm, then there must be, it must be

523
01:06:33.150 --> 01:06:41.760
Jae Young Lee: It. We have to prove that they, it is not arbitrary so they always we get the correct result just meaning means that

524
01:06:42.900 --> 01:06:56.940
Jae Young Lee: We visit all knows in the particular way. But if you do that manually. Yeah, you could do that. But you have to make sure that you don't miss anything or you did correctly when you write an algorithm. We don't want the output to be dead.

525
01:06:58.410 --> 01:06:58.590
Jae Young Lee: But

526
01:06:58.620 --> 01:07:00.000
Frank wu: I think if I can do it right.

527
01:07:00.870 --> 01:07:03.750
Frank wu: Constraints, or just go arbitrary

528
01:07:05.910 --> 01:07:29.280
Jae Young Lee: Oh no. What I'm saying is that between the end you can choose original source code from A to B and then a to z or from A to C and then after that, A to B, but you don't go. A to B to an E and then call A to C and E g. We don't do that. We first all knows that that one edge away from here.

529
01:07:31.140 --> 01:07:33.240
Jae Young Lee: Then only then we go to. He was, he

530
01:07:38.340 --> 01:07:39.600
Jae Young Lee: Said to answer your question.

531
01:07:42.060 --> 01:07:42.240
Frank wu: I

532
01:07:42.450 --> 01:07:47.940
Jae Young Lee: Believe I discussed one algorithm that uses a queue.

533
01:07:50.160 --> 01:07:53.070
Jae Young Lee: You might take, for instance, how much time to here.

534
01:07:54.750 --> 01:07:56.160
Jae Young Lee: Let me briefly discussed it

535
01:07:57.480 --> 01:08:03.270
Franklyn: Okay, so before you before you leave. Go back to your discussion. So, can you please

536
01:08:04.320 --> 01:08:06.780
Franklyn: Read the last few days BFS place.

537
01:08:07.590 --> 01:08:12.990
Franklyn: What can you please read illustrate this BFS how the audience go

538
01:08:14.640 --> 01:08:35.760
Jae Young Lee: OK, so the restart from here we visit all vertices that one edge away from so test is too. Right. Correct. Yeah, and see you next repeated two edges away from a there is 21212 so without considering any order. Yes.

539
01:08:36.960 --> 01:08:40.740
Jae Young Lee: Then, so we visited visited this is

540
01:08:41.970 --> 01:08:47.310
Jae Young Lee: Now we are pitching those data. Three Ages from a which means that the

541
01:08:48.630 --> 01:09:03.720
Jae Young Lee: From G. There are no other practices, we can go up for me. We can go the F H. They are the those that are three edgy away from me. So it is that final visit so Texas PFS

542
01:09:05.130 --> 01:09:13.500
Jae Young Lee: And but the just to make our discussion simple we said when we have a choice. We

543
01:09:14.550 --> 01:09:16.230
Jae Young Lee: Pitch it in alphabetical order.

544
01:09:17.670 --> 01:09:18.060
Franklyn: Okay.

545
01:09:18.120 --> 01:09:27.960
Jae Young Lee: So to make that more concrete. So let me discuss one, I would like to. I think I discussed this argument. But just to refresh your memory.

546
01:09:30.030 --> 01:09:31.890
Jae Young Lee: So we start from a

547
01:09:32.940 --> 01:09:35.580
Jae Young Lee: Then this is just regular cutie pie for q

548
01:09:36.750 --> 01:09:38.100
Jae Young Lee: We include a

549
01:09:39.750 --> 01:09:45.540
Jae Young Lee: Then we take you. So we put it one. He was, it is, it could just be right there.

550
01:09:46.560 --> 01:09:46.800
Jae Young Lee: Yeah.

551
01:09:48.180 --> 01:10:07.830
Jae Young Lee: All purchases that up, Jason to this one. So the PNC again. Let's put us off vertical. So we end up in QC So Ted, is a one iteration. Is it true. So we see this one. So, this one, this one iteration that we just repeat the same now.

552
01:10:11.880 --> 01:10:26.940
Jae Young Lee: Again, this is a regular fight for. Q So DQ. The first one is equal. Once this know the ticket, then all purchases that are the Jason suit that note is in this case there's only one so easy.

553
01:10:30.630 --> 01:10:31.620
Jae Young Lee: And then next

554
01:10:34.110 --> 01:10:35.250
Jae Young Lee: Sees the code.

555
01:10:37.350 --> 01:10:44.490
Jae Young Lee: That see as E and G. But he has been visited already. So on the cheese in queue.

556
01:10:46.260 --> 01:10:48.360
Jae Young Lee: Then next is the cute.

557
01:10:50.820 --> 01:11:00.030
Jae Young Lee: After he has been declared again to three nodes that are instance to this one, their interest. So let's put on TF ah

558
01:11:06.480 --> 01:11:10.830
Jae Young Lee: Then, so he has been too cute so now taken je

559
01:11:14.310 --> 01:11:22.200
Jae Young Lee: Which he okay he again since it hasn't ever any adjacent fortis's so we just keep going to D.

560
01:11:25.140 --> 01:11:25.380
Jae Young Lee: Yeah.

561
01:11:27.030 --> 01:11:37.740
Jae Young Lee: He is one node to node adjacent but both of them. They were already include here so we don't do anything. The next DQ f

562
01:11:39.270 --> 01:11:42.330
Jae Young Lee: Again, nothing that next DQ H

563
01:11:43.350 --> 01:11:53.880
Jae Young Lee: When we dig. Ah, it is to just fortis's he has been already taken care of. But I is not so is in

564
01:11:56.940 --> 01:12:11.310
Jae Young Lee: The x is equal. So at this time we are so this is the sequence of vertices that are generated by PFS assuming we are fishing in alphabetical order.

565
01:12:12.540 --> 01:12:19.530
Jae Young Lee: But actual order is determined by your own data structure. Suppose you are using it, the case and she list.

566
01:12:20.820 --> 01:12:22.740
Jae Young Lee: So for example, let's look at this one.

567
01:12:25.470 --> 01:12:44.790
Jae Young Lee: Jason, see List. Suppose I'm implementing this list is a linked list that si P not automatically test how I showed my grip. Then after incurring a that DQ we said that after take you to say, we will into

568
01:12:45.810 --> 01:12:56.340
Jae Young Lee: Two purposes data with Jason suit is for, then I will just follow this data structure, which means that see will be included, first, followed by

569
01:12:58.140 --> 01:13:09.420
Jae Young Lee: What I'm trying to say is that the order by which these two vertices or Christy is determined by eventually your own data structure or eventually how you write it

570
01:13:11.340 --> 01:13:22.920
Jae Young Lee: But, but let's to make our discussion simple. Let's just say we are doing it this way to 10 it is guaranteed to visit have

571
01:13:26.670 --> 01:13:27.960
Jae Young Lee: Any other questions.

572
01:13:36.630 --> 01:13:37.950
Jae Young Lee: DFS PFS

573
01:13:44.910 --> 01:13:45.690
Jae Young Lee: Properties.

574
01:13:47.100 --> 01:13:52.920
Jae Young Lee: That all the edges. They're called also a prompt a trace it is called a PFS

575
01:13:56.700 --> 01:14:01.170
Jae Young Lee: By the way, so one property of the SBIR phase three is so let's go

576
01:14:02.790 --> 01:14:03.210
First

577
01:14:26.130 --> 01:14:47.550
Jae Young Lee: The tree both DFS tree and the PS3 PFS trees palm trees trees, but they're directed trees or engine directed graph, it happens to be a tree. Then, which means that each edgy has a direction. So, beginning with a short note, basically this edgy, the direction of he indicates

578
01:14:48.720 --> 01:14:50.670
Jae Young Lee: How we discovered each not

579
01:14:51.840 --> 01:14:52.080
Jae Young Lee: Then

580
01:14:53.910 --> 01:15:00.000
Jae Young Lee: From this note to this note there's a path there. So this is the shortest path.

581
01:15:01.470 --> 01:15:02.130
Jae Young Lee: Assuming

582
01:15:04.200 --> 01:15:08.220
Jae Young Lee: The length of each one. Each edges, one, one.

583
01:15:09.600 --> 01:15:09.900
Jae Young Lee: So,

584
01:15:12.570 --> 01:15:18.900
Jae Young Lee: For example, from this note to this note, I can go this way or I can go this way.

585
01:15:20.910 --> 01:15:23.220
Jae Young Lee: Oh, in this case, yes, I should get it.

586
01:15:24.390 --> 01:15:30.330
Jae Young Lee: Yeah. So let's look at this example from a 2D, I can go this way or

587
01:15:32.010 --> 01:15:33.630
Jae Young Lee: Probably, I have to make another

588
01:15:35.220 --> 01:15:37.260
Jae Young Lee: I can't go this way or I can't go this

589
01:15:38.550 --> 01:15:40.560
Jae Young Lee: This graph is so simple, so

590
01:15:42.960 --> 01:15:44.160
Jae Young Lee: I need to add one more.

591
01:15:45.660 --> 01:15:48.150
Jae Young Lee: One more note here to make a point. So,

592
01:15:49.200 --> 01:15:54.090
Jae Young Lee: But PFS will find this path, it will not find this path.

593
01:15:56.850 --> 01:15:57.630
Jae Young Lee: A path.

594
01:15:58.830 --> 01:15:59.490
Jae Young Lee: From

595
01:16:00.510 --> 01:16:06.150
Jae Young Lee: From PFS from start note to other node is always a shortest path.

596
01:16:07.500 --> 01:16:10.050
Jae Young Lee: In terms of number of edges or assuming

597
01:16:11.580 --> 01:16:14.520
Jae Young Lee: The edge length is all one unit then

598
01:16:15.570 --> 01:16:17.700
Jae Young Lee: This is one of the properties of PFS

599
01:16:20.280 --> 01:16:26.970
Jae Young Lee: Running time is again the same as DFS again. We said that that PFS is also

600
01:16:28.320 --> 01:16:29.220
Jae Young Lee: The people

601
01:16:30.600 --> 01:16:34.170
Jae Young Lee: We he. This is and this is

602
01:16:40.710 --> 01:16:43.110
Jae Young Lee: Now waiting graph of more interesting algorithms.

603
01:16:45.390 --> 01:16:54.780
Jae Young Lee: We already know what weighted graph is an edge is associated with it could be anything. In this example, it's just a number, then

604
01:16:56.070 --> 01:16:59.580
Jae Young Lee: Maybe here it will present a distance between two cities.

605
01:17:00.810 --> 01:17:07.560
Jae Young Lee: Memphis person is 1216 bars and post a new york 215 bucks and so on. So, it is

606
01:17:10.320 --> 01:17:14.670
Jae Young Lee: Our textbook uses it is function is a function. Wait function.

607
01:17:17.610 --> 01:17:25.080
Jae Young Lee: This is an argument, it returns a real number. He has waited a function, it maps to a viola.

608
01:17:27.240 --> 01:17:28.350
Jae Young Lee: DC just numbers.

609
01:17:34.350 --> 01:17:35.280
Jae Young Lee: That length of it.

610
01:17:37.860 --> 01:17:41.700
Jae Young Lee: Can be represented as a sequence of nose or

611
01:17:43.590 --> 01:17:45.750
Jae Young Lee: So sequence of edges in this way.

612
01:17:47.670 --> 01:17:59.520
Jae Young Lee: When it is a sequence of pages, then the second node or this he must be the same as the first edge of the subsequent session. In that way, the path is for

613
01:18:01.560 --> 01:18:09.240
Jae Young Lee: It length with path is, some of which have all these edges. So each edge is associated with them.

614
01:18:10.260 --> 01:18:22.380
Jae Young Lee: With the citizens' 10 to 15. This is 100 that we add all these ways that that is weight of this path.

615
01:18:28.080 --> 01:18:30.570
Jae Young Lee: Distance between you and we

616
01:18:35.670 --> 01:18:38.100
Jae Young Lee: Could be multiple passes in general.

617
01:18:40.560 --> 01:18:54.600
Jae Young Lee: Dishes how distance is defined in this context, it is not a general, it doesn't have a general meaning the menu slightly different distance from you to be easy minimum length path.

618
01:18:56.760 --> 01:19:18.810
Jae Young Lee: Which is suppose if I go listen. These two two cities. If I go, let's say this is a poster New York through this path. It is a 20 bars. The 300 meters. This is 500 words, then we say distance between these two nodes is 200 again. We know that it is the length of the minimum

619
01:19:20.430 --> 01:19:25.230
Jae Young Lee: So it is different from the usual notion of a thesis.

620
01:19:27.300 --> 01:19:34.740
Jae Young Lee: If there's no path from you to be 10 it is to find to pitch us to infinity, infinity, Mr data.

621
01:19:36.030 --> 01:19:38.160
Jae Young Lee: Over so so basically

622
01:19:39.270 --> 01:19:45.930
Jae Young Lee: At this minimum length path is called the shortest path. So in this example. This is a shortest path for you to

623
01:19:47.970 --> 01:19:50.160
Jae Young Lee: Test. How to census defined

624
01:19:51.480 --> 01:19:52.530
Jae Young Lee: In this context.

625
01:19:55.380 --> 01:20:00.060
Jae Young Lee: Now the way cycle. So let me use a different example here.

626
01:20:15.270 --> 01:20:15.600
Jae Young Lee: I say

627
01:20:17.940 --> 01:20:25.980
Jae Young Lee: 256

628
01:20:27.840 --> 01:20:37.230
Jae Young Lee: What is a shortest path from A 2820

629
01:20:39.690 --> 01:20:41.580
Jae Young Lee: Actually, it is not defined.

630
01:20:44.820 --> 01:20:46.020
Jae Young Lee: Suppose I go

631
01:20:47.880 --> 01:20:48.480
Jae Young Lee: This path.

632
01:20:50.010 --> 01:20:51.600
Jae Young Lee: The path length is 17

633
01:20:54.270 --> 01:20:54.990
Jae Young Lee: If I go

634
01:20:56.310 --> 01:21:10.050
Jae Young Lee: This way, again, by definition, the length of the path is, some of which have already so 10 plus two plus negative six, then it becomes a four plus five, then it becomes

635
01:21:11.400 --> 01:21:21.960
Jae Young Lee: If I go around the circle once more than 10 plus two plus minus six minus six. It is 05

636
01:21:23.850 --> 01:21:26.970
Jae Young Lee: So there is no notion. Okay, what is

637
01:21:28.980 --> 01:21:29.940
Jae Young Lee: The reason is

638
01:21:32.010 --> 01:21:48.990
Jae Young Lee: This cycle then way to recycle or weight of the length of the cycle is, some of which of all ages in the cycle. It is two plus negative six is negative for

639
01:21:50.520 --> 01:21:58.620
Jae Young Lee: Again, the reason we can't even show the path is because of the cycle, whose lengthiest for such cycle is called

640
01:22:00.720 --> 01:22:01.380
Jae Young Lee: United way's

641
01:22:03.030 --> 01:22:07.350
Jae Young Lee: So in certain applications which could be negative numbers.

642
01:22:08.400 --> 01:22:27.270
Jae Young Lee: Not in all applications and if narrative which allowed them. It is possible, we may have a narrative with cycle in our craft. So if there's a narrative with cycle then show the path is not defined the doors, which means that we can talk about the shortest paths.

643
01:22:35.580 --> 01:22:43.920
Jae Young Lee: So I think, yeah, usually topological ordering is discussed after DFS yes yeah we're skipping. Yeah.

644
01:22:47.370 --> 01:22:51.600
Jae Young Lee: Any particular reason you are interested in top of those gloating

645
01:22:54.360 --> 01:23:01.590
Molly Rice: Know, professors, sorry. I was just wondering, I was just going along with what was in the book. So I just wanted to make sure I wasn't missing a topic.

646
01:23:02.220 --> 01:23:04.260
Jae Young Lee: OK. So again, so

647
01:23:05.520 --> 01:23:11.160
Jae Young Lee: We can't discuss everything here we have a limited amount of time so certain topics I had to draw on.

648
01:23:18.510 --> 01:23:20.580
Jae Young Lee: Top of logical ordering is used

649
01:23:21.630 --> 01:23:28.380
Jae Young Lee: When we want to decide precedence for partial ordering among different events.

650
01:23:30.450 --> 01:23:35.790
Jae Young Lee: Yeah. Okay, so that's a different story. That is one interesting application, but

651
01:23:36.810 --> 01:23:40.290
Jae Young Lee: I dropped dead because of some limited time we have

652
01:23:44.280 --> 01:23:44.520
Jae Young Lee: Oh,

653
01:23:45.780 --> 01:23:52.560
Jae Young Lee: Famous texture. So this is show this paper with them. There are different types of food. This path proper

654
01:23:53.730 --> 01:24:01.170
Jae Young Lee: single source, single destination single source multiple destinations, the multiple destinations to single source, a single

655
01:24:01.650 --> 01:24:11.190
Jae Young Lee: Multiple sources to single destination and multiple sources to multiple destinations. There are, in general, four types of to disperse problems.

656
01:24:11.760 --> 01:24:28.950
Jae Young Lee: Just type. Sure. So with them sort of single source to multiple destinations, which means that if we run it, I trust algorithm or a source node, then we will find the shortest path from the source node every art so multiple destinations.

657
01:24:33.210 --> 01:24:44.940
Jae Young Lee: This algorithm is for both 2200 graph then without words but just so if there are negative words and showed his pets may not be even define

658
01:24:47.040 --> 01:24:54.720
Jae Young Lee: It finds a shortest path from source for text to every four times. So this is a single source multiple destination.

659
01:24:55.860 --> 01:24:57.210
Jae Young Lee: This is a greedy algorithm.

660
01:25:01.050 --> 01:25:03.690
Jae Young Lee: Oh, so you are to your project. So you know that it is

661
01:25:05.370 --> 01:25:07.860
Jae Young Lee: It says source node is a destination, though.

662
01:25:20.610 --> 01:25:35.820
Jae Young Lee: If I want to find the shortest path path from this source and destination. But then I can't enumerate all possible paths, this way, this way or this way or this way.

663
01:25:36.900 --> 01:25:39.930
Jae Young Lee: And then for each path I click let them.

664
01:25:41.610 --> 01:25:42.930
Jae Young Lee: Choose one is the shortest

665
01:25:44.040 --> 01:25:50.250
Jae Young Lee: 10 it is guaranteed. Are you always pointed the shortest path, but it is very expensive.

666
01:25:52.110 --> 01:26:15.510
Jae Young Lee: This graph is smoke, but soon there is non trivial number of possible paths in a general graph, we are less than 10 so knows that 10 so for ages 10s are very small in real application to hundreds of thousands of dollars. Then number parcel passes is extremely larger than a actions.

667
01:26:16.590 --> 01:26:27.720
Jae Young Lee: Theoretical we can prove there's no polynomial 10 hours writing time more search algorithm exam is all possible pairs of shoes exponential. So it is too expensive.

668
01:26:28.890 --> 01:26:30.960
Jae Young Lee: So people develop a greedy algorithm.

669
01:26:32.580 --> 01:26:38.730
Jae Young Lee: We discussed a greedy algorithm idea that general concept using that hot month code.

670
01:26:40.410 --> 01:26:51.870
Jae Young Lee: Instead of examining or possible that this we make a decision based on what we know at that time, or with a limited information. So from this note.

671
01:26:52.350 --> 01:27:05.040
Jae Young Lee: I can go either this note this note Protestant. So I have three choices that I use it that limited information and then I choose just one of them to this page on this.

672
01:27:06.060 --> 01:27:13.710
Jae Young Lee: Length, or some other additional information like the reticence information in your project that the point is that we don't use

673
01:27:14.190 --> 01:27:35.130
Jae Young Lee: All possible informations or we are not looking for global optimal solutions. We are looking for on a local optimal solutions. So we just make a decision from here to here, from here to just wanted to guess what to to heuristics, all with the in your project do

674
01:27:36.240 --> 01:27:52.710
Jae Young Lee: Textures algorithm does exactly the same way. Of course, it is a different you stick but the difference between Dykstra, and those two heuristics is the T shirts I will the guarantees, we always get the shortest path or we will always get the optimal solution.

675
01:27:53.760 --> 01:27:56.490
Jae Young Lee: Just extra service. So it is

676
01:28:00.300 --> 01:28:03.120
Jae Young Lee: So there are three important components.

677
01:28:04.230 --> 01:28:16.890
Jae Young Lee: In discussing this texture so good in terms of operation. The most important operation. It is as the call for the structures or goodness this relaxation

678
01:28:18.570 --> 01:28:18.810
Jae Young Lee: Now,

679
01:28:19.980 --> 01:28:30.810
Jae Young Lee: I said that there are three important component in terms of data structure. So, one is this notion of dictated citizens. So let's discuss it first. Then after that we're discussing relaxation

680
01:28:33.210 --> 01:28:44.580
Jae Young Lee: Doctors are good in music radio with them. It is a 34 so which means that we go through a certain number of iterations for situation second iteration. And so we call

681
01:28:46.980 --> 01:28:47.250
Jae Young Lee: That

682
01:28:49.170 --> 01:28:53.220
Jae Young Lee: Each node is a P value so

683
01:29:04.440 --> 01:29:08.970
Jae Young Lee: Initially, the value of x node is zero or others.

684
01:29:13.320 --> 01:29:18.870
Jae Young Lee: As we go on, or as we execute this algorithm one iteration at a time.

685
01:29:21.030 --> 01:29:25.710
Jae Young Lee: To be updated with some less it is 10, is it too.

686
01:29:26.730 --> 01:29:28.710
Jae Young Lee: Late this is updated 15 so

687
01:29:30.030 --> 01:29:35.610
Jae Young Lee: Then at a certain point in time. The DW over a node. Listen, this is

688
01:29:36.780 --> 01:29:38.490
Jae Young Lee: The build up is no disputing

689
01:29:39.870 --> 01:29:48.330
Jae Young Lee: The meaning of this Putin is dead is show this path length, but the length of the shortest path we found so far.

690
01:29:50.190 --> 01:29:50.910
Jae Young Lee: Suppose

691
01:29:52.440 --> 01:29:54.360
Jae Young Lee: This 15 is a distance from

692
01:29:56.160 --> 01:29:58.560
Jae Young Lee: Distance along this path, for example.

693
01:30:00.390 --> 01:30:20.100
Jae Young Lee: Then so far. This was the best I could do that text message 50 but later as we go on more iterations, the API. There's a shortest path from here. This is a test one to ensure this path length is a three, then it will be updated to three.

694
01:30:21.810 --> 01:30:22.050
Jae Young Lee: So,

695
01:30:23.520 --> 01:30:46.530
Jae Young Lee: Force, the meaning or way to have a note is that this length of the shortest path which we found at the time so far, that's the best we could test at the second thing is that he gets updated as we execute this textures algorithm, as we call it. Now relaxation

696
01:30:47.550 --> 01:30:50.730
Jae Young Lee: Suppose we're running the type source algorithm.

697
01:30:57.810 --> 01:31:02.550
Jae Young Lee: Suppose current do please hundred just for sake of discussion that

698
01:31:03.600 --> 01:31:05.430
Jae Young Lee: To view is, let's say nine

699
01:31:06.960 --> 01:31:09.330
Jae Young Lee: Then there's a passport here. Yes.

700
01:31:11.550 --> 01:31:27.960
Jae Young Lee: So, which means that if I come to be along this path. The length is this hundred miles. I have to try from St. You just 90 Rs. Suppose there's a road or edge connecting you to please support. This is for

701
01:31:30.690 --> 01:31:43.050
Jae Young Lee: So it is certain point in time. So I citizen current to vs hundred but I see to viewers 90 that this at length is a way to to satisfy that

702
01:31:45.810 --> 01:31:47.340
Jae Young Lee: Instead of coming this way.

703
01:31:48.960 --> 01:31:49.920
Jae Young Lee: I should come this way.

704
01:31:51.960 --> 01:31:54.990
Jae Young Lee: Because this is shorter 95 is shorter than hundred

705
01:31:56.520 --> 01:31:59.160
Jae Young Lee: So then, okay, so no I'm not.

706
01:32:00.180 --> 01:32:04.350
Jae Young Lee: Coming this way so oh come visit updated this one tonight.

707
01:32:06.360 --> 01:32:15.000
Jae Young Lee: This operation is called the relaxation. We say we are Lexi, the set of July, we are relaxing. This is focus on of course

708
01:32:16.980 --> 01:32:17.910
Jae Young Lee: Just like is

709
01:32:23.850 --> 01:32:25.260
Jae Young Lee: It a certain point in time.

710
01:32:26.880 --> 01:32:33.840
Jae Young Lee: To view is 10 to 17 and then there's an edge from you to be. And then it is one

711
01:32:34.860 --> 01:32:46.320
Jae Young Lee: That we add this 10 with one that compare that with current to fee, since it is smaller, so it is updated.

712
01:32:47.610 --> 01:32:48.900
Jae Young Lee: That is what this relaxation

713
01:32:51.270 --> 01:32:57.870
Jae Young Lee: If your view, plus this educate smaller than current to be

714
01:32:58.890 --> 01:33:01.800
Jae Young Lee: To be updated in civilization.

715
01:33:02.850 --> 01:33:03.780
Jae Young Lee: In this example,

716
01:33:04.950 --> 01:33:11.820
Jae Young Lee: This he is not relaxed because 10 plus 12 is not smaller than 70

717
01:33:13.680 --> 01:33:20.340
Jae Young Lee: Disabilities. As you can see textures are going to use this relaxation when it is trying to find the shortest path.

718
01:33:37.560 --> 01:33:38.010
Jae Young Lee: Yes.

719
01:33:49.410 --> 01:33:53.670
Jae Young Lee: So this is a pseudo code, but we will illustrate using an example.

720
01:33:55.080 --> 01:33:59.850
Jae Young Lee: So I said, there are three data structures. One is that array textures that d

721
01:34:03.510 --> 01:34:04.200
Jae Young Lee: Initially,

722
01:34:05.430 --> 01:34:15.780
Jae Young Lee: Do faces zero and to all other nodes and infinity. Now we have two data structures. One is called a CLO this informally called Cloud.

723
01:34:16.830 --> 01:34:25.470
Jae Young Lee: Will be using this cloud when we're discussing the knowledge spanning tree algorithm data to you may want to remember to. So one is a priority to pick

724
01:34:31.830 --> 01:34:32.310
Jae Young Lee: From first

725
01:34:35.340 --> 01:34:38.520
Jae Young Lee: Priority contains also teaches

726
01:34:39.690 --> 01:34:42.690
Jae Young Lee: All those in the craft, including this so

727
01:34:43.800 --> 01:34:52.350
Jae Young Lee: Then we know that the way protocol works is that if we invoke the movie method and and to be the smallest keys remove them.

728
01:34:54.300 --> 01:34:55.050
Jae Young Lee: Because here.

729
01:34:56.670 --> 01:34:58.740
Jae Young Lee: We are sorry all knows

730
01:35:00.090 --> 01:35:06.240
Jae Young Lee: Oh, we know this this Tw Tw is the key of A note, which means that

731
01:35:07.380 --> 01:35:16.500
Jae Young Lee: If we invoke it be moved me methyl on this piratical then a note with the smallest p value will be removed.

732
01:35:18.510 --> 01:35:29.670
Jae Young Lee: Once it is the most from this particular it is coming to this cloud a cloud is a test setup knows you can implement this one in any way you want.

733
01:35:31.560 --> 01:35:31.830
Jae Young Lee: Again,

734
01:35:33.030 --> 01:35:35.700
Jae Young Lee: This is a cloud. Now let's look at

735
01:35:37.170 --> 01:35:55.530
Jae Young Lee: So we have a gear re gestures, the values of all purchases PQ priority queue. All those are there initially did he tell you all a note is the key of A dental cloud is just a some data structure. We are. We just collect, not

736
01:35:59.190 --> 01:35:59.700
Jae Young Lee: First

737
01:36:02.790 --> 01:36:10.050
Jae Young Lee: To SS zero d of all other nodes, the infinity in all of them are in the priority.

738
01:36:11.250 --> 01:36:18.660
Jae Young Lee: Then we invoke the movement method since s as the smallest at it will be removed.

739
01:36:19.830 --> 01:36:26.280
Jae Young Lee: Then once it is removed. It comes into the cloud. So in this diagram.

740
01:36:27.720 --> 01:36:37.200
Jae Young Lee: If a node comes into the cloud. It is colored yellow. So S is called yellow, which means that S is now in the cloud.

741
01:36:38.220 --> 01:36:47.520
Jae Young Lee: Or other nodes are still in the priority kill once a note is pulled into the cloud. Then we select this edge, let this

742
01:36:48.540 --> 01:36:54.060
Jae Young Lee: You know what location does zero plus two is smaller than infinity. So,

743
01:36:56.160 --> 01:37:01.350
Jae Young Lee: It is updated zero plus nine is smaller than infinity, it is updated and then

744
01:37:02.820 --> 01:37:03.270
Jae Young Lee: Here.

745
01:37:04.740 --> 01:37:09.270
Jae Young Lee: They are color red and then the gauge dead easy

746
01:37:21.450 --> 01:37:22.200
Jae Young Lee: Predecessor

747
01:37:25.080 --> 01:37:27.360
Jae Young Lee: Prestigious predecessor.

748
01:37:32.700 --> 01:37:50.850
Jae Young Lee: Indicating S is the predecessor of a s is the predecessor. O. P. Eventually, we'll get a path from as to all other notes again path is a sequence of purchases. So there's an ordering there. So, s is the predecessor as its predecessor of

749
01:37:52.020 --> 01:38:11.130
Jae Young Lee: This data structure is not explicitly mentioned. So we need another to structure their stores this predecessor relationship and it is a one iteration. So one iteration includes the movement and then relax all adjacent fortis's Tessa one it right

750
01:38:12.900 --> 01:38:13.290
Jae Young Lee: Now,

751
01:38:14.460 --> 01:38:28.770
Jae Young Lee: We begin again the movement. So we have a two nine infinity infinity. So, this one has a smaller scale. So it will be chemo. So he comes into the crowd that it is three.

752
01:38:30.390 --> 01:38:34.260
Jae Young Lee: Edges instance to this. So we Lex, this one, this one, this one,

753
01:38:35.550 --> 01:38:54.270
Jae Young Lee: So a. So this is a two plus eight is smaller than infinity. So, two plus eight is updated to plus 15 is more than infinity is updated so its predecessor relationship relationship and then two plus six.

754
01:38:55.350 --> 01:39:18.600
Jae Young Lee: is smaller than current to be that is nine, so these two edges relaxed in the video piece, updated to a look at here. The predecessor relationship changes previously s was the predecessor now is the prejudice winning previously.

755
01:39:20.400 --> 01:39:35.940
Jae Young Lee: When I came from STP I follow this path, but at that time just nine was the best, but now after a has been pulled into the cloud, then it is password if I come this way.

756
01:39:37.050 --> 01:39:40.320
Jae Young Lee: So as you can see limitation involves

757
01:39:41.400 --> 01:39:46.470
Jae Young Lee: Possible potential change or despair and also potential change of his predecessors.

758
01:39:48.030 --> 01:39:50.580
Jae Young Lee: Now, that is the second iteration.

759
01:39:51.900 --> 01:39:55.020
Jae Young Lee: That you know what

760
01:39:56.340 --> 01:40:08.130
Jae Young Lee: We have to do. So we just repeat the same process with next week. Oh, man, we have a 817 10 infinity. So tissue will be removed because it is smallest

761
01:40:09.090 --> 01:40:24.270
Jae Young Lee: To remove that this is Lexi. So previously, either to infinity. Was this is pulled into the private cloud. A plus three smaller than infinity. So, it becomes 11

762
01:40:28.530 --> 01:40:29.160
Jae Young Lee: One more.

763
01:40:30.630 --> 01:40:33.420
Jae Young Lee: Next we will remove this one.

764
01:40:34.350 --> 01:40:36.330
Sherard Howe: Why wouldn't be to go next, after a

765
01:40:36.780 --> 01:40:39.360
Sherard Howe: Since it's only six or eight at that point.

766
01:40:40.590 --> 01:40:41.490
Jae Young Lee: Say that again.

767
01:40:41.580 --> 01:40:44.310
Sherard Howe: What you are saying, Be gone into cloud next word

768
01:40:45.270 --> 01:40:50.790
Jae Young Lee: Is let's just erase this one. So are you looking at the here.

769
01:40:52.140 --> 01:40:52.530
Sherard Howe: Yeah.

770
01:40:52.980 --> 01:40:54.510
Jae Young Lee: Okay, so what was your question now.

771
01:40:54.570 --> 01:40:57.720
Sherard Howe: You're saying he's going to the cloud. Next, right, because he

772
01:40:58.830 --> 01:41:02.130
Jae Young Lee: Yes, he is. This one is pulled into the crowd crowd. Yes.

773
01:41:03.210 --> 01:41:06.930
Jae Young Lee: So why is that why is he pulled into the cloud is it

774
01:41:07.530 --> 01:41:08.100
Sherard Howe: Making sure

775
01:41:09.030 --> 01:41:10.770
Sherard Howe: It sounds like something else was being done.

776
01:41:11.190 --> 01:41:15.660
Jae Young Lee: Okay, yes, you are correct. A PIECE. IT IS YELLOW up. Yes.

777
01:41:15.780 --> 01:41:20.550
Sherard Howe: And we're going that way because we become before D since the weights, the same between two great

778
01:41:23.010 --> 01:41:25.530
Jae Young Lee: He has the smallest at at this time.

779
01:41:25.830 --> 01:41:26.460
Sherard Howe: Oh, sorry.

780
01:41:27.750 --> 01:41:28.020
Jae Young Lee: This

781
01:41:29.070 --> 01:41:29.310
Jae Young Lee: Is

782
01:41:29.370 --> 01:41:38.340
Jae Young Lee: B C D are still in the priority queues among those. This one has a smallest, such as the movie nestled removes this one.

783
01:41:41.250 --> 01:41:54.900
Jae Young Lee: Okay, so with the next movement method again at this time d C and E or in the priority queue and he has a smallest thing. So it is removed it now.

784
01:41:56.070 --> 01:41:56.850
Jae Young Lee: This edges.

785
01:41:57.960 --> 01:42:05.010
Jae Young Lee: Previously it was 17 here. And now once he is pulled into the cloud.

786
01:42:06.870 --> 01:42:18.600
Jae Young Lee: Templates one is smaller than 17 so this tea or sees updated our TP comes the predecessor previously a was practices, which means that

787
01:42:19.170 --> 01:42:36.000
Jae Young Lee: Previously, this was the best we could to show this path length was 17 but was we found this one, then we know that this is the shortest path to plus a plus one is 11 so testimonial to civilization.

788
01:42:37.500 --> 01:42:51.540
Jae Young Lee: Next, these two are still in the priority queue. They have the same key than which one is removed is basically determined by that underlying data structure. So one of them will be removed. So in this example, we're subsidies first

789
01:42:53.880 --> 01:43:04.080
Jae Young Lee: No need to, let's say, because it doesn't have any outgoing edge then next one more removing the thought, you will be moved, then we are talking

790
01:43:06.810 --> 01:43:09.600
Jae Young Lee: So if we collect those edges.

791
01:43:11.280 --> 01:43:28.530
Jae Young Lee: That establish a predecessor relationships that we have a show this practice from. So all of us. So this is show this path from s s to be this is showing his path from St. E. And so this is exercise.

792
01:43:31.110 --> 01:43:32.460
Jae Young Lee: And he questions.

793
01:43:35.520 --> 01:43:36.960
Saurav Banerjee: Professor so

794
01:43:38.250 --> 01:43:44.460
Saurav Banerjee: Fear using priority queue after after each node has been moved to cloud.

795
01:43:45.540 --> 01:43:49.470
Saurav Banerjee: Are we going to recreate the priority queue based on the

796
01:43:50.640 --> 01:43:54.720
Jae Young Lee: Know. So initially, all those already in the priority queue.

797
01:43:56.010 --> 01:44:08.280
Jae Young Lee: We just invoke the move me method, then a the one with the smallest is removed the remaining. Those are still there in the production. So you don't have to be concerned about.

798
01:44:09.330 --> 01:44:16.080
Saurav Banerjee: But, but the values are changing, right. So our priority queue has the key as the

799
01:44:18.030 --> 01:44:19.380
Jae Young Lee: Update of keys.

800
01:44:20.040 --> 01:44:23.670
Jae Young Lee: Right. Yes. Yeah, that has to be done. Correct.

801
01:44:25.710 --> 01:44:26.010
Okay.

802
01:44:27.300 --> 01:44:34.140
Jae Young Lee: So when a an edgy or as you say in general. Next 10 associated the

803
01:44:35.520 --> 01:44:41.910
Jae Young Lee: Tea Parties have that the associated the nose must be updated. Yes, that is correct.

804
01:44:45.450 --> 01:44:45.870
Saurav Banerjee: Thank you.

805
01:44:49.380 --> 01:44:50.970
Jae Young Lee: Any other questions.

806
01:44:52.680 --> 01:45:00.270
Jae Young Lee: Again, the how that updates should be done is implementation dependent. So what kind of data structure we are using

807
01:45:04.110 --> 01:45:12.690
Jae Young Lee: Running time. I don't think we will do this run in time analysis running time is actually dependent on what kind of underlying data structures we are using

808
01:45:13.590 --> 01:45:22.710
Jae Young Lee: This running time is based on the assumption that will be using the cheap priority queue. The one you used for that process scheduling that particular

809
01:45:23.940 --> 01:45:29.580
Jae Young Lee: Again, so you will not discuss how we get this one and you don't have to be concerned about.

810
01:45:30.840 --> 01:45:51.090
Jae Young Lee: So this is a texture. So there are different show this path algorithms like in multiple sources to multiple destinations. And so then they're more general also textures are good certain so this pencil textures algorithm doesn't detect the presence of a net which side so

811
01:45:52.440 --> 01:46:09.450
Jae Young Lee: It assumes the graph doesn't have an active cycle. But there are some showed his path algorithms. If we run will tell us. Okay. This graph is inadequate cycle. So it will terminate prematurely, and then it will issue and Aramis or some kind of message so it can detect

812
01:46:11.010 --> 01:46:13.590
Jae Young Lee: The point is that dangerous algorithm is one of the

813
01:46:15.300 --> 01:46:16.950
Jae Young Lee: Most we'll launch your despair thought

814
01:46:18.240 --> 01:46:26.220
Jae Young Lee: That this is that the only. There are other algorithms that can do some additional things. Other ones beta

815
01:46:28.650 --> 01:46:29.940
Jae Young Lee: Now minimum spanning tree.

816
01:46:32.340 --> 01:46:43.500
Jae Young Lee: So we defined what spanning tree is to as his name suggests, minimum spanning trees are spending to have a graph that has showed this way.

817
01:46:46.740 --> 01:46:57.030
Jae Young Lee: This is definition of a way to a three way Toby tree is, some of which of all ages in the tree we add old witch of all ages.

818
01:47:02.040 --> 01:47:07.020
Jae Young Lee: So one observation is that the one thing is that given a graph.

819
01:47:08.370 --> 01:47:18.540
Jae Young Lee: We may have been multiple minimum spanning trees, which means that we may have a spanning trees multiple spanning trees that have the same smallest length.

820
01:47:19.890 --> 01:47:21.390
Jae Young Lee: Spanning Tree may not be unique.

821
01:47:23.940 --> 01:47:35.190
Jae Young Lee: So here are we given a craft which undirected waited and connected and simple, simple means no parole edges know selfless

822
01:47:36.360 --> 01:47:39.960
Jae Young Lee: Or textual guess to algorithms cream john Carlton and Chris cards.

823
01:47:42.720 --> 01:47:48.930
Jae Young Lee: At the conceptual level description couscous our wilderness simple attendee. So, actually a lot simpler. This is very easy.

824
01:47:50.460 --> 01:47:59.040
Jae Young Lee: Cream journey is more complex, but the implementation is different implementation of postcards algorithm actually could be a more complex.

825
01:48:00.150 --> 01:48:04.020
Jae Young Lee: We will discuss cream genetic algorithm first, then we'll discuss postcards.

826
01:48:07.020 --> 01:48:10.230
Jae Young Lee: The supreme Johnny algorithm is very similar to

827
01:48:11.760 --> 01:48:15.210
Jae Young Lee: Textures in the way it works. Of course, there are different.

828
01:48:16.320 --> 01:48:17.640
Jae Young Lee: For so we define

829
01:48:18.690 --> 01:48:20.430
Jae Young Lee: This minimum wage edge.

830
01:48:22.140 --> 01:48:22.920
Jae Young Lee: Suppose

831
01:48:24.360 --> 01:48:29.310
Jae Young Lee: We have a graph and then we divide that graph into to

832
01:48:30.480 --> 01:48:44.130
Jae Young Lee: Settle for teachers to set up north. So we have a some notes here, we have all the remaining both mutually exclusive, which means that a note may not belong here. The usual. This is called a cart.

833
01:48:45.420 --> 01:48:46.440
Jae Young Lee: Me so

834
01:48:48.210 --> 01:48:50.940
Jae Young Lee: For your public key. So let's use a simple example.

835
01:48:53.730 --> 01:48:54.600
Jae Young Lee: I have a graph.

836
01:49:03.300 --> 01:49:04.620
Jae Young Lee: I can cut this graph.

837
01:49:13.980 --> 01:49:17.520
Jae Young Lee: We said three purchases. This is a paper.

838
01:49:20.430 --> 01:49:22.230
Jae Young Lee: Since this is a connected graph.

839
01:49:24.390 --> 01:49:30.510
Jae Young Lee: connected graph. They'll must be at least one edge connecting a note in this petition.

840
01:49:31.590 --> 01:49:37.230
Jae Young Lee: And another note in that position. Again, this is connected graph there must be at least one extra

841
01:49:39.030 --> 01:49:48.480
Jae Young Lee: In general, there could be multiple edges connect a note here to another note there. So these edges are called rejects

842
01:49:49.650 --> 01:49:52.020
Jae Young Lee: It. Ah, he has a suppose

843
01:49:53.280 --> 01:49:55.650
Jae Young Lee: Let's make one more note here.

844
01:49:57.060 --> 01:49:58.020
Jae Young Lee: Hey, sorry about that.

845
01:50:00.300 --> 01:50:01.650
Jae Young Lee: One more note.

846
01:50:07.980 --> 01:50:09.270
Jae Young Lee: Is also preach edge.

847
01:50:11.940 --> 01:50:12.480
Jae Young Lee: And

848
01:50:13.530 --> 01:50:19.170
Jae Young Lee: Suppose way to have this ages 10 but it took this age is 20 way to this edges through

849
01:50:22.080 --> 01:50:24.450
Jae Young Lee: This age is called the minimum weight.

850
01:50:26.730 --> 01:50:33.660
Jae Young Lee: We have bridges in this case three, then the one with the smallest weight is called a minimum weight.

851
01:50:36.150 --> 01:50:40.380
Jae Young Lee: So this minimum worth edges use in this journey.

852
01:50:44.280 --> 01:50:46.410
Jae Young Lee: The way it works is, again, very similar.

853
01:50:47.970 --> 01:50:49.320
Jae Young Lee: Again, it is a cloud.

854
01:50:51.780 --> 01:50:54.270
Jae Young Lee: Then also, it uses a protocol.

855
01:50:56.040 --> 01:51:01.530
Jae Young Lee: So we will discuss details of the supreme joining

856
01:51:03.210 --> 01:51:13.980
Jae Young Lee: Like textures of it is a notion of cloud. It uses a priority queue. And then it also has a notion of detail you have a note.

857
01:51:15.870 --> 01:51:27.870
Jae Young Lee: Again, it is a particular very similar, but we will not discuss this prim Johnny are written using those three data structures. So we'll discuss in a slightly different way.

858
01:51:28.680 --> 01:51:37.170
Jae Young Lee: The reason is that we don't want to discuss it algorithm itself, but still we want, you want to describe how the sprint journey or whatever.

859
01:51:37.470 --> 01:51:52.920
Jae Young Lee: Then he can be described in slightly different way that that ways easier to understand. That's why we are using that. But if you're interested, you can read our textbook or you can just read a pseudo code, you will find it is very similar to

860
01:51:54.450 --> 01:51:54.960
Jae Young Lee: Textures

861
01:51:55.980 --> 01:51:58.920
Jae Young Lee: Is all three components cloud D and protocol.

862
01:52:00.420 --> 01:52:05.250
Jae Young Lee: And the way it works is that we begin at a certain starts note.

863
01:52:07.500 --> 01:52:08.340
Jae Young Lee: This case here.

864
01:52:09.810 --> 01:52:10.110
Jae Young Lee: That

865
01:52:12.810 --> 01:52:15.990
Jae Young Lee: Initially, it is pulled into the cloud. So, this

866
01:52:19.380 --> 01:52:34.110
Jae Young Lee: Yellow means it is pulled into the cloud blue indicates cloud lb. So here it means that is pulled into the cloud. It is in the cloud that read it is a minimum with he

867
01:52:34.770 --> 01:52:54.810
Jae Young Lee: Let me draw a line here, this so now once a is in the cloud, then all others actually in the priority queue, but we can think of that petition. So this is a one partition. This is another partition. This is a, this is a prime

868
01:52:57.570 --> 01:52:59.970
Jae Young Lee: Then this is a research.

869
01:53:01.260 --> 01:53:01.830
Jae Young Lee: Project

870
01:53:02.850 --> 01:53:11.760
Jae Young Lee: Three bridges connecting one note from here and then another popular among these three bridges in this case.

871
01:53:13.110 --> 01:53:15.690
Jae Young Lee: A he has a smallest wait

872
01:53:16.860 --> 01:53:17.490
Jae Young Lee: Exposed

873
01:53:19.140 --> 01:53:21.000
Jae Young Lee: So this is, you know,

874
01:53:22.800 --> 01:53:38.370
Jae Young Lee: Then we first collect this minimum wage. Ah, so we have to click to so eventually trees, a collection of minimum pinion trees, a collection of all this meal with he did this. He is pulled into the cloud.

875
01:53:41.520 --> 01:53:44.130
Jae Young Lee: So now our cloud has

876
01:53:46.020 --> 01:53:48.780
Jae Young Lee: Two purposes. This is, again, this is cloud.

877
01:53:51.690 --> 01:53:52.740
Jae Young Lee: There are many

878
01:53:56.910 --> 01:53:59.730
Jae Young Lee: Many bridges agency. So this is a British

879
01:54:01.410 --> 01:54:02.160
Jae Young Lee: This is a bridge.

880
01:54:03.510 --> 01:54:04.290
Jae Young Lee: This is a bridge.

881
01:54:05.730 --> 01:54:06.090
Jae Young Lee: This is

882
01:54:08.280 --> 01:54:23.100
Jae Young Lee: An edge connecting a note in the cloud with another node in the productivity or outside the cloud among this this D. He has the smallest weight. So that is minimum weight.

883
01:54:24.480 --> 01:54:25.230
Jae Young Lee: So, which means that

884
01:54:31.290 --> 01:54:41.250
Jae Young Lee: He is pulled into the cloud, then this know at this edge is collected. Can we just keep collecting this. We don't wait. He is

885
01:54:42.660 --> 01:54:58.620
Jae Young Lee: Next, so again, once it is pulled into cloud. This is what we have, again, there are many bridges that this E F is the smallest way. So, E, F is minimum wage, so it

886
01:54:59.820 --> 01:55:04.140
Jae Young Lee: Will be pulling this fit into the cloud and we'll be collecting this edge.

887
01:55:05.880 --> 01:55:07.350
Jae Young Lee: So this is what we have

888
01:55:08.760 --> 01:55:11.760
Jae Young Lee: We have a D, E, F in our cloud.

889
01:55:13.980 --> 01:55:14.130
Jae Young Lee: Then

890
01:55:15.540 --> 01:55:20.580
Jae Young Lee: Again, there are many bridges among those. This has small list.

891
01:55:21.840 --> 01:55:24.480
Jae Young Lee: So C is pulled into the cloud. And if you call it.

892
01:55:25.530 --> 01:55:26.730
Jae Young Lee: You can see what we are

893
01:55:28.260 --> 01:55:29.460
Jae Young Lee: In each iteration.

894
01:55:30.900 --> 01:55:41.610
Jae Young Lee: Basically we identify me, man. Wait. Ah, that we pull that node into the cloud and we collect that he

895
01:55:42.930 --> 01:55:44.670
Jae Young Lee: See comes into the cloud.

896
01:55:46.200 --> 01:55:46.470
Jae Young Lee: Then

897
01:55:48.000 --> 01:55:53.610
Jae Young Lee: If this time. This is just as a practice. So this is a bridge.

898
01:55:54.810 --> 01:55:55.620
Jae Young Lee: This is a bridge.

899
01:55:56.670 --> 01:56:08.580
Jae Young Lee: This is a preacher. This is a project. This is a purchase decision. Is there a lot of pretentious about those. I think this PC as a small this way.

900
01:56:09.750 --> 01:56:10.110
Jae Young Lee: So,

901
01:56:12.000 --> 01:56:13.650
Jae Young Lee: So it is color red

902
01:56:15.720 --> 01:56:17.640
Jae Young Lee: So in the next iteration. So

903
01:56:20.160 --> 01:56:23.520
Jae Young Lee: Not actually in so we're not talking about in terms of iteration.

904
01:56:24.810 --> 01:56:30.270
Jae Young Lee: Will be pulling this into the cloud. So p comes into the cloud. So tell us what we have

905
01:56:32.760 --> 01:56:41.160
Jae Young Lee: Then we have to project is E g and FDA, the FDA has the smaller. Wait, so

906
01:56:42.870 --> 01:56:47.700
Jae Young Lee: F, G, this edge is added to our collection of me my weight ages.

907
01:56:48.870 --> 01:56:59.640
Jae Young Lee: Then that collection of minimum wage ages. We collected so far they for a minute pantry. So this red edges doesn't mean much better.

908
01:57:01.680 --> 01:57:08.880
Jae Young Lee: At this is another way of describing Johnny Carver, so we can run it over, but we didn't discuss it.

909
01:57:12.900 --> 01:57:14.670
Jae Young Lee: The way it works is very similar.

910
01:57:16.320 --> 01:57:22.680
Jae Young Lee: The priority queue. When we invoke the movement nestled a note with smaller cities.

911
01:57:24.570 --> 01:57:26.340
Jae Young Lee: Removed and then

912
01:57:28.290 --> 01:57:29.580
Jae Young Lee: The t's have

913
01:57:31.320 --> 01:57:39.060
Jae Young Lee: Some nose. Not all those updated like the T's of those were updated in the texture ourselves so

914
01:57:40.860 --> 01:57:55.050
Jae Young Lee: If you're interested in. So you can read the pseudo code. You don't have to look at the actual details. But if you look at the pseudo code in our textbook. So you will find it very similar, but here for our course if you can do this one in this way manually.

915
01:57:56.550 --> 01:58:03.150
Jae Young Lee: Instead of removing a note from the priority queue, instead of just collecting minimum weight edges.

916
01:58:04.680 --> 01:58:05.850
Jae Young Lee: Then I should be okay.

917
01:58:07.290 --> 01:58:09.090
Jae Young Lee: So this is pretty much identical

918
01:58:11.280 --> 01:58:12.270
Jae Young Lee: Any questions.

919
01:58:14.430 --> 01:58:30.990
Jae Young Lee: Okay. Running time analysis involves. It depends on the underlying data structures. This running time assumes he priority queues us if you compare running time of the journey over the web writing time or Plexus Overton

920
01:58:33.480 --> 01:58:38.250
Jae Young Lee: Day exactly the same, because the way they work is basically the second

921
01:58:47.640 --> 01:58:55.770
Jae Young Lee: Now crews course our word is a description. But again, if you don't discuss implementation, conceptually, it is extremely simple.

922
01:58:59.940 --> 01:59:04.290
Jae Young Lee: It is rather simple. So I'm using a pig graph, actually this graph is in our texts.

923
01:59:07.080 --> 01:59:07.770
Jae Young Lee: Initially,

924
01:59:09.810 --> 01:59:12.660
Jae Young Lee: Each node is a set itself.

925
01:59:14.970 --> 01:59:24.930
Jae Young Lee: So there's a there's a structure called this joint set T shirt said it's a set of sets initially each node is a set. So, this

926
01:59:26.310 --> 01:59:33.120
Jae Young Lee: Red pounder indicates it is a set. So, as it is a set, we note, as I said, we know that

927
01:59:34.530 --> 01:59:38.370
Jae Young Lee: Then from then on, what we do is that we just examine

928
01:59:39.480 --> 01:59:39.900
Jae Young Lee: The

929
01:59:41.310 --> 01:59:42.900
Jae Young Lee: Edgy with the smallest

930
01:59:44.010 --> 01:59:54.930
Jae Young Lee: So in some implementations from the beginning, we sort all edges in increasing order of the weights, but sphere, since we are to manually. So we'll just find manually.

931
01:59:57.570 --> 02:00:04.020
Jae Young Lee: This he has a small industry. Again, we always process in that order order or which is

932
02:00:05.130 --> 02:00:21.900
Jae Young Lee: Then what we do is that, so this he has small district, we look at this end points that see whether they are in the same set, or in this case there in two different cetera SPS its own set JS is on set.

933
02:00:23.550 --> 02:00:33.510
Jae Young Lee: To purchases this age connector in two different states. Then we march. So now, P AMP J or words into lodges

934
02:00:36.720 --> 02:00:39.210
Jae Young Lee: The test one iteration. And we just keep going.

935
02:00:40.530 --> 02:00:43.980
Jae Young Lee: Next, I think this is the smallest to

936
02:00:45.090 --> 02:00:51.120
Jae Young Lee: Get it connected W NJ that w NGO in different settings that we more

937
02:00:57.090 --> 02:00:57.780
Jae Young Lee: Let's try

938
02:01:01.740 --> 02:01:01.860
The

939
02:01:06.330 --> 02:01:16.170
Jae Young Lee: Next two three is the smallest. This is the smallest we get the NJ are in two different sets to emerge.

940
02:01:19.080 --> 02:01:30.240
Jae Young Lee: And then see which one is the next. I think this is for. So S and L are in two different sets of distributed virtual switch

941
02:01:33.360 --> 02:01:48.120
Jae Young Lee: Next, which he has smallest, for we have 556 this one. Oh, and w. So again. Oh, and w in two different sets. So we marched

942
02:01:51.300 --> 02:02:02.670
Jae Young Lee: Next seven this is seven. Oh, and j is wrong, but they are in the same set to already interception. So we don't watch

943
02:02:06.270 --> 02:02:07.200
Jae Young Lee: The next

944
02:02:08.250 --> 02:02:29.790
Jae Young Lee: Or P SEVEN, EIGHT OR P. So, this energy is the smallest weight at this time. So they're in the same set. So we don't we don't have two boys. They're already the same set next to this one. This one has the smallest rate today in two different sets to be bored.

945
02:02:30.870 --> 02:02:31.710
Jae Young Lee: To tears, what we have

946
02:02:34.470 --> 02:02:35.580
Jae Young Lee: And next

947
02:02:37.770 --> 02:02:38.280
Jae Young Lee: Nine.

948
02:02:39.540 --> 02:02:43.140
Jae Young Lee: Do, but they the same so we don't have to do anything.

949
02:02:44.370 --> 02:02:44.940
Jae Young Lee: Next,

950
02:02:45.990 --> 02:02:51.000
Jae Young Lee: M. W. So this is not there in two different sets more

951
02:02:52.200 --> 02:03:04.410
Jae Young Lee: So as you can see, whenever we merge we collect those edges. I think for automation that one. Whenever we merge with collected edge. So, W this edges qualitative

952
02:03:05.730 --> 02:03:06.330
Jae Young Lee: And then

953
02:03:07.380 --> 02:03:07.950
Jae Young Lee: Next,

954
02:03:10.770 --> 02:03:13.230
Jae Young Lee: J is the smallest

955
02:03:16.530 --> 02:03:20.160
Jae Young Lee: But they're in the same set. So with the DM

956
02:03:21.330 --> 02:03:29.490
Jae Young Lee: DM this elephant is small list, but they're in the same set again we skip now to notice one

957
02:03:31.380 --> 02:03:47.760
Jae Young Lee: Day two different sets porch. So we have. We are done. At this time all participants are included that the edges to collect is as we came along.

958
02:03:48.810 --> 02:03:49.590
Jae Young Lee: They are

959
02:03:50.820 --> 02:03:53.880
Jae Young Lee: They all form a minimum spanning

960
02:03:55.980 --> 02:04:03.960
Jae Young Lee: So conceptually very simple but implementation is different. So we have usually with different ways of implementing I should say first

961
02:04:04.470 --> 02:04:20.100
Jae Young Lee: Usually we use a data structure called a disjointed set, it is a data structure and then on this distance set data structure like other data sources we define certain operations. I said membership operation and then some office and

962
02:04:21.270 --> 02:04:39.330
Jae Young Lee: So running time is pico n log n. Again, that it assumes a certain implementation that distance that data structure can be implemented in different ways. And then if you're interested in you can read our textbook textbook as a detailed discussion of the system, but

963
02:04:40.650 --> 02:04:42.720
Jae Young Lee: For, of course, you don't have to be concerned about.

964
02:04:43.860 --> 02:04:56.850
Jae Young Lee: These. This is a cruise costs are written, but let me just finish this one, but you might have noticed one difference between the journey with them and crisscross our work with prim journey over them.

965
02:04:59.640 --> 02:05:00.360
Jae Young Lee: Always

966
02:05:02.070 --> 02:05:13.260
Jae Young Lee: The set of edges we are collecting on the way. Always. It is a tree. As you can see, it will look at only those read the edges always it is a tree.

967
02:05:14.520 --> 02:05:28.350
Jae Young Lee: From the beginning to the end. Pin Johnny garden always has a tree. So at the end. The last three is a spinning minimum spanning tree but Chris Carter algorithm. As you can see, for example, here it is not a tree.

968
02:05:29.400 --> 02:05:35.610
Jae Young Lee: It is a forest. This is it one tree. This is another. So there's a difference.

969
02:05:38.430 --> 02:05:43.470
Jae Young Lee: Basically, we are done for today. But a question. Some of you had a question.

970
02:05:44.010 --> 02:05:49.200
Shawn: Yeah. My question for these two trees which one is the root. How do we know what the root is

971
02:05:50.400 --> 02:06:00.720
Jae Young Lee: Oh for cross cultural algorithm. So was no one knows that is considered a tree. As we can see, so we just keep merging two nodes, right, but with a

972
02:06:02.850 --> 02:06:11.130
Jae Young Lee: prim Johnny, the algorithm we can consider the route. So at the start, note as the tree is known as the road.

973
02:06:12.720 --> 02:06:12.930
But

974
02:06:16.350 --> 02:06:17.010
Jae Young Lee: With a

975
02:06:18.930 --> 02:06:24.480
Jae Young Lee: Crew Scott's algorithm. There's no one note that is considered the roots of a tree.

976
02:06:28.440 --> 02:06:47.340
Jae Young Lee: I think I might have mentioned this one when tree was defined in our textbook. So it is a one designated note as to route, but in general tree doesn't have to be a not so more accurate definition of a tree is called to be 45 free tree.

977
02:06:48.660 --> 02:06:59.790
Jae Young Lee: Tree tree is a tree and the tree, but it doesn't help a lot. But if we if we designate one node as the original that it is called the root of the tree.

978
02:07:01.770 --> 02:07:05.250
Jae Young Lee: But in our textbook when they say a tree.

979
02:07:06.870 --> 02:07:17.880
Jae Young Lee: They are referring to routine tree except this year because this minimum spanning tree created by couscous algorithm is a tree, but it doesn't have it so.

980
02:07:19.290 --> 02:07:24.180
Jae Young Lee: That's the way our textbook. Does this is actually free tree. It is called

981
02:07:28.410 --> 02:07:29.910
Jae Young Lee: Any other questions.

982
02:07:31.590 --> 02:07:44.010
Jae Young Lee: So basically we are done then since you mentioned that this one, I think I mentioned this one previously not everybody agrees with some technologist some

983
02:07:45.390 --> 02:07:54.060
Jae Young Lee: Not many one or two definitions or text us. So if you read other books, you may have a slightly different definitions of a certain concept.

984
02:07:54.990 --> 02:08:08.460
Jae Young Lee: And then some search some words that term is used with the different meanings. But there's nothing we can do about. So that's the way it is. We just have to learn, just as we go.

985
02:08:09.870 --> 02:08:24.840
Jae Young Lee: But the probably the most important thing is that always, you have to assume what I learned from this textbook is always true. So we cannot assume we always have to be open minded in that, in that sense.

986
02:08:30.540 --> 02:08:32.190
Jae Young Lee: Any other questions.

987
02:08:35.820 --> 02:08:40.710
Jae Young Lee: Oh, let's see. My questions. I think that information is in the

988
02:08:43.290 --> 02:08:48.360
Jae Young Lee: Syllabus Flipboard I think there are 30 questions live I posted questions.

989
02:08:53.700 --> 02:08:54.330
Jae Young Lee: On page.

990
02:08:59.340 --> 02:09:00.690
Jae Young Lee: I know

991
02:09:07.890 --> 02:09:08.070
Jae Young Lee: Oh,

992
02:09:09.840 --> 02:09:16.380
Jae Young Lee: Three hours yeah 30 question three hours and 23 hours you have

993
02:09:17.490 --> 02:09:18.780
Jae Young Lee: One and half hour.

994
02:09:19.980 --> 02:09:25.230
Jae Young Lee: Questions in each quiz. So this is twice as many questions, three hours. Yes.

995
02:09:32.040 --> 02:09:37.020
Franklyn: Okay, I have a quick question relating to the project.

996
02:09:37.500 --> 02:09:43.830
Franklyn: He will put you actually want to see because I see a whole bunch of output. Do you want us

997
02:09:43.830 --> 02:09:44.700
Jae Young Lee: Know, I think.

998
02:09:45.000 --> 02:09:47.280
Jae Young Lee: The Simon Says

999
02:09:49.230 --> 02:09:56.310
Jae Young Lee: Simon says First you need to show these three output one, is it does show this path length and shortest path and

1000
02:09:56.940 --> 02:10:14.760
Jae Young Lee: Found by the heuristic algorithm. And then the other one is I can tell this person sequence of all the notes that were are finished it, including backtracking. I think if you look at the assignments. There's an example there he's gonna pull out put

1001
02:10:16.380 --> 02:10:16.950
Jae Young Lee: A sign

1002
02:10:19.380 --> 02:10:19.830
Jae Young Lee: Percent

1003
02:10:29.700 --> 02:10:32.310
Franklyn: So we're not showing all this one you just passed.

1004
02:10:33.480 --> 02:10:35.490
Jae Young Lee: It just took it means that

1005
02:10:37.320 --> 02:10:38.970
Jae Young Lee: You are we should look like this one.

1006
02:10:39.540 --> 02:10:45.360
Franklyn: Okay, so they want us to just pass. We don't need to show that these are the only ones we need show. Correct.

1007
02:10:45.810 --> 02:10:46.680
Jae Young Lee: Correct, yeah.

1008
02:10:47.010 --> 02:10:48.510
Jae Young Lee: For the purpose of grading. Yeah.

1009
02:10:48.810 --> 02:10:50.820
Jae Young Lee: But when you're debugging, and you may have

1010
02:10:50.850 --> 02:10:51.900
Jae Young Lee: To fit more than this.

1011
02:10:52.860 --> 02:10:55.260
Jae Young Lee: But Tesla. Tesla you your job.

1012
02:10:56.040 --> 02:11:00.600
Franklyn: OK, so the structure just want to say this one. Are you shown on the screen.

1013
02:11:00.900 --> 02:11:01.500
Jae Young Lee: Correct, yeah.

1014
02:11:02.130 --> 02:11:02.580
Franklyn: Thank you.

1015
02:11:07.680 --> 02:11:09.330
Jae Young Lee: Any other questions.

1016
02:11:13.440 --> 02:11:15.630
Jae Young Lee: Okay, then we will stop here.

1017
02:11:18.270 --> 02:11:32.550
Jae Young Lee: Then we will discuss PM, et cetera day and then in the last live class one over here. Some of you asked about review session. So I will have a review session on Sunday.

1018
02:11:32.970 --> 02:11:49.170
Jae Young Lee: But the because of other things I have some previous commitments, so I didn't. I was not so sure. What time would be appropriate service. I think it will be probably either again. So I have to check my schedule.

1019
02:11:50.790 --> 02:11:51.480
Jae Young Lee: The thing is that

1020
02:11:53.100 --> 02:12:11.580
Jae Young Lee: We are now teaching you know that the because of the virus all courses remotely our courses so online from the beginning. So I don't go to school. I don't have to coach school, which means that I should have more time because I don't have to commit. But the fact is that

1021
02:12:13.200 --> 02:12:19.830
Jae Young Lee: I'm spending more time. So a lot of meetings online. And so the point is that

1022
02:12:20.700 --> 02:12:40.200
Jae Young Lee: I will find a time on Sunday for review session and then I will post on Blackboard. So you need to check the blackboard under announcements, either. I will do it. Sunday morning like 11 o'clock, like the Saturday live plus or sometime in the afternoon, so I will have a one hour.

1023
02:12:41.490 --> 02:12:51.510
Jae Young Lee: Again, the session is for just Q and A's regarding final exam or any material. You want me to discuss

1024
02:12:55.980 --> 02:13:00.390
Jae Young Lee: Okay, thank you. And then I cannot talk to you again the center. Thank

1025
02:13:02.940 --> 02:13:03.210
You

1026
02:13:06.540 --> 02:13:06.900
Thank you.

